{
  "address": "0x1449D46AEFEBF46cdBe444377daC39e173C24891",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "commitment",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AddedCommitment",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "auctionEnded",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionSuccessful",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "auctionToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_commitment",
          "type": "uint256"
        }
      ],
      "name": "calculateCommitment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "committed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "claimed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "clearingPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "commitEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_from",
          "type": "address"
        }
      ],
      "name": "commitEthFrom",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "commitTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "commitTokensFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "commitmentsTotal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finaliseAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finalised",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_funder",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startDate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endDate",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_paymentCurrency",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_startPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumPrice",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "_wallet",
          "type": "address"
        }
      ],
      "name": "initDutchAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paymentCurrency",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceDrop",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFunction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenWithdrawn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "tokensClaimable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokensRemaining",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalTokensCommitted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x523a0f54323a560bafffc0f8a37af89b8888efbb769a20f60d39530418c6aea0",
  "receipt": {
    "to": null,
    "from": "0x8406A51A0E1B5F52Ff61226773e6328e5Da5d964",
    "contractAddress": "0x1449D46AEFEBF46cdBe444377daC39e173C24891",
    "transactionIndex": 0,
    "gasUsed": "1080296",
    "logsBloom": "0x
    "blockHash": "0xe5555bbf8f20cb696c6e80bb342a48e1e7a4084fb1882879141cab1185eeb58f",
    "transactionHash": "0x523a0f54323a560bafffc0f8a37af89b8888efbb769a20f60d39530418c6aea0",
    "logs": [],
    "blockNumber": 12925241,
    "cumulativeGasUsed": "1080296",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d9c02394b2d9331cad4460e650831b12",
  "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"commitment\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AddedCommitment\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"auctionEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionSuccessful\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"auctionToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_commitment\",\"type\":\"uint256\"}],\"name\":\"calculateCommitment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"committed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearingPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_from\",\"type\":\"address\"}],\"name\":\"commitEthFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"commitTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"commitTokensFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"commitmentsTotal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finaliseAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"finalised\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_funder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_totalTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startDate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_paymentCurrency\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumPrice\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_wallet\",\"type\":\"address\"}],\"name\":\"initDutchAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceDrop\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFunction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenWithdrawn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"tokensClaimable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokensRemaining\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTokensCommitted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wallet\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{\"auctionEnded()\":{\"details\":\"able to claim early if auction is successful\"},\"commitEth()\":{\"details\":\"Needs extra gas limit for additional state changes\"},\"commitTokensFrom(address,uint256)\":{\"details\":\"Users must approve contract prior to committing tokens to auction\"},\"finaliseAuction()\":{\"details\":\"Transfer contract funds to initialised wallet.\"},\"initDutchAuction(address,address,uint256,uint256,uint256,address,uint256,uint256,address)\":{\"details\":\"Init function\"}},\"stateVariables\":{\"ETH_ADDRESS\":{\"details\":\"The placeholder ETH address.\"}}},\"userdoc\":{\"methods\":{\"auctionEnded()\":{\"notice\":\"Returns bool if successful or time has ended\"},\"auctionSuccessful()\":{\"notice\":\"Successful if tokens sold equals totalTokens\"},\"calculateCommitment(uint256)\":{\"notice\":\"Returns the amout able to be committed during an auction\"},\"clearingPrice()\":{\"notice\":\"The current clearing price of the Dutch auction\"},\"commitEthFrom(address)\":{\"notice\":\"Commit ETH to buy tokens for any address\"},\"commitTokens(uint256)\":{\"notice\":\"Commit approved ERC20 tokens to buy tokens on sale\"},\"finaliseAuction()\":{\"notice\":\"Auction finishes successfully above the reserve\"},\"priceFunction()\":{\"notice\":\"Returns price during the auction\"},\"tokenPrice()\":{\"notice\":\"The average price of each token from all commitments.\"},\"tokensClaimable(address)\":{\"notice\":\"How many tokens the user is able to claim\"},\"tokensRemaining()\":{\"notice\":\"Total amount of tokens remaining\"},\"totalTokensCommitted()\":{\"notice\":\"Total amount of tokens committed at current auction price\\u2013\"},\"withdrawTokens()\":{\"notice\":\"Withdraw your tokens once the Auction has ended.\"}}}},\"settings\":{\"compilationTarget\":{\"contracts/Dutch/contracts/DutchSwapAuction.sol\":\"DutchSwapAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dutch/contracts/DutchSwapAuction.sol\":{\"content\":\"pragma solidity ^0.6.9;\\r\\n\\r\\n// ---------------------------------------------------------------------\\r\\n// SPDX-License-Identifier: GPL-3.0\\r\\n// ---------------------------------------------------------------------\\r\\n\\r\\nimport \\\"./Utils/SafeMathPlus.sol\\\";\\r\\n\\r\\ncontract DutchSwapAuction {\\r\\n  using SafeMathPlus for uint256;\\r\\n  /// @dev The placeholder ETH address.\\r\\n  address private constant ETH_ADDRESS =\\r\\n    0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE;\\r\\n\\r\\n  uint256 public startDate;\\r\\n  uint256 public endDate;\\r\\n  uint256 public startPrice;\\r\\n  uint256 public minimumPrice;\\r\\n  uint256 public totalTokens; // Amount to be sold\\r\\n  uint256 public priceDrop; // Price reduction from startPrice at endDate\\r\\n  uint256 public commitmentsTotal;\\r\\n  uint256 public tokenWithdrawn; // the amount of auction tokens already withdrawn\\r\\n  bool private initialised;\\r\\n  bool public finalised;\\r\\n  uint256 private constant _NOT_ENTERED = 1;\\r\\n  uint256 private constant _ENTERED = 2;\\r\\n  uint256 private _status;\\r\\n\\r\\n  address public auctionToken;\\r\\n  address public paymentCurrency;\\r\\n  address payable public wallet; // Where the auction funds will get paid\\r\\n  mapping(address => uint256) public commitments;\\r\\n  mapping(address => uint256) public claimed;\\r\\n\\r\\n  event AddedCommitment(address addr, uint256 commitment, uint256 price);\\r\\n\\r\\n  /// @dev Prevents a contract from calling itself, directly or indirectly.\\r\\n  /// @dev https://eips.ethereum.org/EIPS/eip-2200)\\r\\n  modifier nonReentrant() {\\r\\n    require(_status != _ENTERED); // ReentrancyGuard: reentrant call\\r\\n    _status = _ENTERED;\\r\\n    _;\\r\\n    _status = _NOT_ENTERED;\\r\\n  }\\r\\n\\r\\n  /// @dev Init function\\r\\n  function initDutchAuction(\\r\\n    address _funder,\\r\\n    address _token,\\r\\n    uint256 _totalTokens,\\r\\n    uint256 _startDate,\\r\\n    uint256 _endDate,\\r\\n    address _paymentCurrency,\\r\\n    uint256 _startPrice,\\r\\n    uint256 _minimumPrice,\\r\\n    address payable _wallet\\r\\n  ) external {\\r\\n    require(!initialised); // Already Initialised\\r\\n    require(_endDate > _startDate); // End date earlier than start date\\r\\n    require(_minimumPrice > 0); // Minimum price must be greater than 0\\r\\n\\r\\n    auctionToken = _token;\\r\\n    paymentCurrency = _paymentCurrency;\\r\\n\\r\\n    totalTokens = _totalTokens;\\r\\n    startDate = _startDate;\\r\\n    endDate = _endDate;\\r\\n    startPrice = _startPrice;\\r\\n    minimumPrice = _minimumPrice;\\r\\n    wallet = _wallet;\\r\\n    _status = _NOT_ENTERED;\\r\\n\\r\\n    uint256 numerator = startPrice.sub(minimumPrice);\\r\\n    uint256 denominator = endDate.sub(startDate);\\r\\n    priceDrop = numerator.div(denominator);\\r\\n\\r\\n    // There are many non-compliant ERC20 tokens... this can handle most, adapted from UniSwap V2\\r\\n    _safeTransferFrom(auctionToken, _funder, _totalTokens);\\r\\n    initialised = true;\\r\\n  }\\r\\n\\r\\n  // Dutch Auction Price Function\\r\\n  // ============================\\r\\n  //\\r\\n  // Start Price -----\\r\\n  //                   \\\\\\r\\n  //                    \\\\\\r\\n  //                     \\\\\\r\\n  //                      \\\\ ------------ Clearing Price\\r\\n  //                     / \\\\            = AmountRaised/TokenSupply\\r\\n  //      Token Price  --   \\\\\\r\\n  //                  /      \\\\\\r\\n  //                --        ----------- Minimum Price\\r\\n  // Amount raised /          End Time\\r\\n  //\\r\\n\\r\\n  /// @notice The average price of each token from all commitments.\\r\\n  function tokenPrice() public view returns (uint256) {\\r\\n    return commitmentsTotal.mul(1e18).div(totalTokens);\\r\\n  }\\r\\n\\r\\n  /// @notice Returns price during the auction\\r\\n  function priceFunction() public view returns (uint256) {\\r\\n    /// @dev Return Auction Price\\r\\n    if (block.timestamp <= startDate) {\\r\\n      return startPrice;\\r\\n    }\\r\\n    if (block.timestamp >= endDate) {\\r\\n      return minimumPrice;\\r\\n    }\\r\\n    return _currentPrice();\\r\\n  }\\r\\n\\r\\n  /// @notice The current clearing price of the Dutch auction\\r\\n  function clearingPrice() public view returns (uint256) {\\r\\n    /// @dev If auction successful, return tokenPrice\\r\\n    if (tokenPrice() > priceFunction()) {\\r\\n      return tokenPrice();\\r\\n    }\\r\\n    return priceFunction();\\r\\n  }\\r\\n\\r\\n  /// @notice How many tokens the user is able to claim\\r\\n  function tokensClaimable(address _user) public view returns (uint256) {\\r\\n    uint256 tokensAvailable = commitments[_user].mul(1e18).div(clearingPrice());\\r\\n    return tokensAvailable.sub(claimed[msg.sender]);\\r\\n  }\\r\\n\\r\\n  /// @notice Total amount of tokens committed at current auction price\\u2013\\r\\n  function totalTokensCommitted() public view returns (uint256) {\\r\\n    return commitmentsTotal.mul(1e18).div(clearingPrice());\\r\\n  }\\r\\n\\r\\n  /// @notice Total amount of tokens remaining\\r\\n  function tokensRemaining() public view returns (uint256) {\\r\\n    uint256 totalCommitted = totalTokensCommitted();\\r\\n    if (totalCommitted >= totalTokens) {\\r\\n      return 0;\\r\\n    } else {\\r\\n      return totalTokens.sub(totalCommitted);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Returns price during the auction\\r\\n  function _currentPrice() private view returns (uint256) {\\r\\n    uint256 elapsed = block.timestamp.sub(startDate);\\r\\n    uint256 priceDiff = elapsed.mul(priceDrop);\\r\\n    return startPrice.sub(priceDiff);\\r\\n  }\\r\\n\\r\\n  //--------------------------------------------------------\\r\\n  // Commit to buying tokens!\\r\\n  //--------------------------------------------------------\\r\\n\\r\\n  /// @notice Buy Tokens by committing ETH to this contract address\\r\\n  /// @dev Needs extra gas limit for additional state changes\\r\\n  receive() external payable {\\r\\n    commitEthFrom(msg.sender);\\r\\n  }\\r\\n\\r\\n  /// @dev Needs extra gas limit for additional state changes\\r\\n  function commitEth() public payable {\\r\\n    commitEthFrom(msg.sender);\\r\\n  }\\r\\n\\r\\n  /// @notice Commit ETH to buy tokens for any address\\r\\n  function commitEthFrom(address payable _from) public payable {\\r\\n    require(!finalised); // Auction was cancelled\\r\\n    require(address(paymentCurrency) == ETH_ADDRESS); // Payment currency is not ETH\\r\\n    // Get ETH able to be committed\\r\\n    uint256 ethToTransfer = calculateCommitment(msg.value);\\r\\n\\r\\n    // Accept ETH Payments\\r\\n    uint256 ethToRefund = msg.value.sub(ethToTransfer);\\r\\n    if (ethToTransfer > 0) {\\r\\n      _addCommitment(_from, ethToTransfer);\\r\\n    }\\r\\n    // Return any ETH to be refunded\\r\\n    if (ethToRefund > 0) {\\r\\n      _from.transfer(ethToRefund);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Commit approved ERC20 tokens to buy tokens on sale\\r\\n  function commitTokens(uint256 _amount) public {\\r\\n    commitTokensFrom(msg.sender, _amount);\\r\\n  }\\r\\n\\r\\n  /// @dev Users must approve contract prior to committing tokens to auction\\r\\n  function commitTokensFrom(address _from, uint256 _amount)\\r\\n    public\\r\\n    nonReentrant\\r\\n  {\\r\\n    require(!finalised); // Auction was cancelled\\r\\n    require(address(paymentCurrency) != ETH_ADDRESS); // Only token transfers\\r\\n    uint256 tokensToTransfer = calculateCommitment(_amount);\\r\\n    if (tokensToTransfer > 0) {\\r\\n      _safeTransferFrom(paymentCurrency, _from, tokensToTransfer);\\r\\n      _addCommitment(_from, tokensToTransfer);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  /// @notice Returns the amout able to be committed during an auction\\r\\n  function calculateCommitment(uint256 _commitment)\\r\\n    public\\r\\n    view\\r\\n    returns (uint256 committed)\\r\\n  {\\r\\n    uint256 maxCommitment = totalTokens.mul(clearingPrice()).div(1e18);\\r\\n    if (commitmentsTotal.add(_commitment) > maxCommitment) {\\r\\n      return maxCommitment.sub(commitmentsTotal);\\r\\n    }\\r\\n    return _commitment;\\r\\n  }\\r\\n\\r\\n  /// @notice Commits to an amount during an auction\\r\\n  function _addCommitment(address _addr, uint256 _commitment) internal {\\r\\n    require(block.timestamp >= startDate && block.timestamp <= endDate); // Outside auction hours\\r\\n    commitments[_addr] = commitments[_addr].add(_commitment);\\r\\n    commitmentsTotal = commitmentsTotal.add(_commitment);\\r\\n    emit AddedCommitment(_addr, _commitment, _currentPrice());\\r\\n  }\\r\\n\\r\\n  //--------------------------------------------------------\\r\\n  // Finalise Auction\\r\\n  //--------------------------------------------------------\\r\\n\\r\\n  /// @notice Successful if tokens sold equals totalTokens\\r\\n  function auctionSuccessful() public view returns (bool) {\\r\\n    return tokenPrice() >= clearingPrice();\\r\\n  }\\r\\n\\r\\n  /// @notice Returns bool if successful or time has ended\\r\\n  /// @dev able to claim early if auction is successful\\r\\n  function auctionEnded() public view returns (bool) {\\r\\n    return auctionSuccessful() || block.timestamp > endDate;\\r\\n  }\\r\\n\\r\\n  /// @notice Auction finishes successfully above the reserve\\r\\n  /// @dev Transfer contract funds to initialised wallet.\\r\\n  function finaliseAuction() public nonReentrant {\\r\\n    require(!finalised); // Auction already finalised\\r\\n    if (auctionSuccessful()) {\\r\\n      /// @dev Successful auction\\r\\n      /// @dev Transfer contributed tokens to wallet.\\r\\n      _tokenPayment(paymentCurrency, wallet, commitmentsTotal);\\r\\n    } else if (commitmentsTotal == 0 && block.timestamp < startDate) {\\r\\n      /// @dev Cancelled Auction\\r\\n      /// @dev You can cancel the auction before it starts\\r\\n      _tokenPayment(auctionToken, wallet, totalTokens);\\r\\n    } else {\\r\\n      /// @dev Failed auction\\r\\n      /// @dev Return auction tokens back to wallet.\\r\\n      require(block.timestamp > endDate, \\\"Auction not finished yet\\\");\\r\\n      _tokenPayment(auctionToken, wallet, totalTokens);\\r\\n    }\\r\\n    finalised = true;\\r\\n  }\\r\\n\\r\\n  /// @notice Withdraw your tokens once the Auction has ended.\\r\\n  function withdrawTokens() public nonReentrant {\\r\\n    if (auctionSuccessful()) {\\r\\n      /// @dev Successful auction! Transfer claimed tokens.\\r\\n      uint256 tokensToClaim = tokensClaimable(msg.sender);\\r\\n      require(tokensToClaim > 0, \\\"No tokens to claim\\\");\\r\\n      claimed[msg.sender] = claimed[msg.sender].add(tokensToClaim);\\r\\n      tokenWithdrawn = tokenWithdrawn.add(tokensToClaim);\\r\\n      _tokenPayment(auctionToken, msg.sender, tokensToClaim);\\r\\n    } else {\\r\\n      /// @dev Auction did not meet reserve price.\\r\\n      /// @dev Return committed funds back to user.\\r\\n      require(block.timestamp > endDate); // Auction not yet finished\\r\\n      uint256 fundsCommitted = commitments[msg.sender];\\r\\n      require(fundsCommitted > 0); // No funds committed\\r\\n\\r\\n      commitments[msg.sender] = 0; // Stop multiple withdrawals and free some gas\\r\\n      _tokenPayment(paymentCurrency, msg.sender, fundsCommitted);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  //--------------------------------------------------------\\r\\n  // Helper Functions\\r\\n  //--------------------------------------------------------\\r\\n\\r\\n  // There are many non-compliant ERC20 tokens... this can handle most, adapted from UniSwap V2\\r\\n  // I'm trying to make it a habit to put external calls last (reentrancy)\\r\\n  // You can put this in an internal function if you like.\\r\\n  function _safeTransfer(\\r\\n    address token,\\r\\n    address to,\\r\\n    uint256 amount\\r\\n  ) internal {\\r\\n    // solium-disable-next-line security/no-low-level-calls\\r\\n    (bool success, bytes memory data) = token.call(\\r\\n      // 0xa9059cbb = bytes4(keccak256(\\\"transferFrom(address,address,uint256)\\\"))\\r\\n      abi.encodeWithSelector(0xa9059cbb, to, amount)\\r\\n    );\\r\\n    require(success && (data.length == 0 || abi.decode(data, (bool)))); // ERC20 Transfer failed\\r\\n  }\\r\\n\\r\\n  function _safeTransferFrom(\\r\\n    address token,\\r\\n    address from,\\r\\n    uint256 amount\\r\\n  ) internal {\\r\\n    // solium-disable-next-line security/no-low-level-calls\\r\\n    (bool success, bytes memory data) = token.call(\\r\\n      // 0x23b872dd = bytes4(keccak256(\\\"transferFrom(address,address,uint256)\\\"))\\r\\n      abi.encodeWithSelector(0x23b872dd, from, address(this), amount)\\r\\n    );\\r\\n    require(success && (data.length == 0 || abi.decode(data, (bool)))); // ERC20 TransferFrom failed\\r\\n  }\\r\\n\\r\\n  /// @dev Helper function to handle both ETH and ERC20 payments\\r\\n  function _tokenPayment(\\r\\n    address _token,\\r\\n    address payable _to,\\r\\n    uint256 _amount\\r\\n  ) internal {\\r\\n    if (address(_token) == ETH_ADDRESS) {\\r\\n      _to.transfer(_amount);\\r\\n    } else {\\r\\n      _safeTransfer(_token, _to, _amount);\\r\\n    }\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x1a01b38bc117b67a5d10fa779d12c34fb4f2030a388ccdeea160c683e796c88e\",\"license\":\"GPL-3.0\"},\"contracts/Dutch/contracts/Utils/SafeMathPlus.sol\":{\"content\":\"pragma solidity ^0.6.9;\\r\\n\\r\\n/**\\r\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\r\\n * checks.\\r\\n *\\r\\n * See: https://github.com/OpenZeppelin/openzeppelin-contracts\\r\\n */\\r\\nlibrary SafeMathPlus {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n        return c;\\r\\n    }\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n    function max(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        c = a >= b ? a : b;\\r\\n    }\\r\\n    function min(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        c = a <= b ? a : b;\\r\\n    }\\r\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\r\\n    function sqrt(uint y) internal pure returns (uint z) {\\r\\n        if (y > 3) {\\r\\n            z = y;\\r\\n            uint x = y / 2 + 1;\\r\\n            while (x < z) {\\r\\n                z = x;\\r\\n                x = (y / x + x) / 2;\\r\\n            }\\r\\n        } else if (y != 0) {\\r\\n            z = 1;\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x08c2b41c1c11f76c42b8a61bf37e3efcea98dc7798c7304fc6cf0542ae30d176\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "devdoc": {
    "methods": {
      "auctionEnded()": {
        "details": "able to claim early if auction is successful"
      },
      "commitEth()": {
        "details": "Needs extra gas limit for additional state changes"
      },
      "commitTokensFrom(address,uint256)": {
        "details": "Users must approve contract prior to committing tokens to auction"
      },
      "finaliseAuction()": {
        "details": "Transfer contract funds to initialised wallet."
      },
      "initDutchAuction(address,address,uint256,uint256,uint256,address,uint256,uint256,address)": {
        "details": "Init function"
      }
    },
    "stateVariables": {
      "ETH_ADDRESS": {
        "details": "The placeholder ETH address."
      }
    }
  },
  "userdoc": {
    "methods": {
      "auctionEnded()": {
        "notice": "Returns bool if successful or time has ended"
      },
      "auctionSuccessful()": {
        "notice": "Successful if tokens sold equals totalTokens"
      },
      "calculateCommitment(uint256)": {
        "notice": "Returns the amout able to be committed during an auction"
      },
      "clearingPrice()": {
        "notice": "The current clearing price of the Dutch auction"
      },
      "commitEthFrom(address)": {
        "notice": "Commit ETH to buy tokens for any address"
      },
      "commitTokens(uint256)": {
        "notice": "Commit approved ERC20 tokens to buy tokens on sale"
      },
      "finaliseAuction()": {
        "notice": "Auction finishes successfully above the reserve"
      },
      "priceFunction()": {
        "notice": "Returns price during the auction"
      },
      "tokenPrice()": {
        "notice": "The average price of each token from all commitments."
      },
      "tokensClaimable(address)": {
        "notice": "How many tokens the user is able to claim"
      },
      "tokensRemaining()": {
        "notice": "Total amount of tokens remaining"
      },
      "totalTokensCommitted()": {
        "notice": "Total amount of tokens committed at current auction price–"
      },
      "withdrawTokens()": {
        "notice": "Withdraw your tokens once the Auction has ended."
      }
    }
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 11,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "startDate",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 13,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "endDate",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 15,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "startPrice",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 17,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "minimumPrice",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 19,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "totalTokens",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 21,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "priceDrop",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 23,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "commitmentsTotal",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "tokenWithdrawn",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 27,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "initialised",
        "offset": 0,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 29,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "finalised",
        "offset": 1,
        "slot": "8",
        "type": "t_bool"
      },
      {
        "astId": 37,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "_status",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 39,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "auctionToken",
        "offset": 0,
        "slot": "10",
        "type": "t_address"
      },
      {
        "astId": 41,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "paymentCurrency",
        "offset": 0,
        "slot": "11",
        "type": "t_address"
      },
      {
        "astId": 43,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "wallet",
        "offset": 0,
        "slot": "12",
        "type": "t_address_payable"
      },
      {
        "astId": 47,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "commitments",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 51,
        "contract": "contracts/Dutch/contracts/DutchSwapAuction.sol:DutchSwapAuction",
        "label": "claimed",
        "offset": 0,
        "slot": "14",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
