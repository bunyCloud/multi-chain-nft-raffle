{
  "address": "0xAcCD31E942C8B73a7d5040ca20BA4e0d59AE9579",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC721",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bidPrice",
          "type": "uint256"
        }
      ],
      "name": "Bid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC721",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "CancelOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC721",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "taker",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "Claim",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract IERC721",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "seller",
          "type": "address"
        }
      ],
      "name": "MakeOrder",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_order",
          "type": "bytes32"
        }
      ],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_order",
          "type": "bytes32"
        }
      ],
      "name": "buyItNow",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_order",
          "type": "bytes32"
        }
      ],
      "name": "cancelOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_order",
          "type": "bytes32"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endBlock",
          "type": "uint256"
        }
      ],
      "name": "dutchAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_startPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endBlock",
          "type": "uint256"
        }
      ],
      "name": "englishAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feePercent",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_endBlock",
          "type": "uint256"
        }
      ],
      "name": "fixedPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_order",
          "type": "bytes32"
        }
      ],
      "name": "getCurrentPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderIdBySeller",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "orderIdByToken",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "orderInfo",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "orderType",
          "type": "uint8"
        },
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "contract IERC721",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endBlock",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastBidPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lastBidder",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "isSold",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_seller",
          "type": "address"
        }
      ],
      "name": "sellerOrderLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeAddress",
          "type": "address"
        }
      ],
      "name": "setFeeAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "tokenOrderLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "_percent",
          "type": "uint16"
        }
      ],
      "name": "updateFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x967d52be5bf7b95c0d84c0cd407779b9c1d07a53cc643f0c753f3d872e17e449",
  "receipt": {
    "to": null,
    "from": "0x8406A51A0E1B5F52Ff61226773e6328e5Da5d964",
    "contractAddress": "0xAcCD31E942C8B73a7d5040ca20BA4e0d59AE9579",
    "transactionIndex": 0,
    "gasUsed": "1512690",
    "logsBloom": "0x
    "blockHash": "0xac891c603a524e156a27d19690d6f546babec00ae4373304336ff31a7a2e49fb",
    "transactionHash": "0x967d52be5bf7b95c0d84c0cd407779b9c1d07a53cc643f0c753f3d872e17e449",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 13735874,
        "transactionHash": "0x967d52be5bf7b95c0d84c0cd407779b9c1d07a53cc643f0c753f3d872e17e449",
        "address": "0xAcCD31E942C8B73a7d5040ca20BA4e0d59AE9579",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008406a51a0e1b5f52ff61226773e6328e5da5d964"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xac891c603a524e156a27d19690d6f546babec00ae4373304336ff31a7a2e49fb"
      }
    ],
    "blockNumber": 13735874,
    "cumulativeGasUsed": "1512690",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6361209b6a38bd9ddea10c399681a96d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bidPrice\",\"type\":\"uint256\"}],\"name\":\"Bid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"CancelOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"taker\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"Claim\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"}],\"name\":\"MakeOrder\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_order\",\"type\":\"bytes32\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_order\",\"type\":\"bytes32\"}],\"name\":\"buyItNow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_order\",\"type\":\"bytes32\"}],\"name\":\"cancelOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_order\",\"type\":\"bytes32\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"name\":\"dutchAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"name\":\"englishAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePercent\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_endBlock\",\"type\":\"uint256\"}],\"name\":\"fixedPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_order\",\"type\":\"bytes32\"}],\"name\":\"getCurrentPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderIdBySeller\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"orderIdByToken\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"orderInfo\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"orderType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"contract IERC721\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBidPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lastBidder\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isSold\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_seller\",\"type\":\"address\"}],\"name\":\"sellerOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeAddress\",\"type\":\"address\"}],\"name\":\"setFeeAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"tokenOrderLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_percent\",\"type\":\"uint16\"}],\"name\":\"updateFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BunyAuction.sol\":\"BunyAuction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/utils/ERC721Holder.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721Receiver.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC721Receiver} interface.\\n *\\n * Accepts all token transfers.\\n * Make sure the contract is able to use its token with {IERC721-safeTransferFrom}, {IERC721-approve} or {IERC721-setApprovalForAll}.\\n */\\ncontract ERC721Holder is IERC721Receiver {\\n    /**\\n     * @dev See {IERC721Receiver-onERC721Received}.\\n     *\\n     * Always returns `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address,\\n        address,\\n        uint256,\\n        bytes memory\\n    ) public virtual override returns (bytes4) {\\n        return this.onERC721Received.selector;\\n    }\\n}\\n\",\"keccak256\":\"0x0108bf6a6ebd5f96678bed33a35947537263f96766131ee91461fb6485805028\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/BunyAuction.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity =0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/utils/ERC721Holder.sol\\\";\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract BunyAuction is ERC721Holder, Ownable {\\n\\n  struct Order {\\n    uint8 orderType;  //0:Fixed Price, 1:Dutch Auction, 2:English Auction\\n    address seller;\\n    IERC721 token;\\n    uint256 tokenId;\\n    uint256 startPrice;\\n    uint256 endPrice;\\n    uint256 startBlock;\\n    uint256 endBlock;\\n    uint256 lastBidPrice;\\n    address lastBidder;\\n    bool isSold;\\n  }\\n\\n  mapping (IERC721 => mapping (uint256 => bytes32[])) public orderIdByToken;\\n  mapping (address => bytes32[]) public orderIdBySeller;\\n  mapping (bytes32 => Order) public orderInfo;\\n\\n  address public feeAddress;\\n  uint16 public feePercent;\\n\\n  event MakeOrder(IERC721 indexed token, uint256 id, bytes32 indexed hash, address seller);\\n  event CancelOrder(IERC721 indexed token, uint256 id, bytes32 indexed hash, address seller);\\n  event Bid(IERC721 indexed token, uint256 id, bytes32 indexed hash, address bidder, uint256 bidPrice);\\n  event Claim(IERC721 indexed token, uint256 id, bytes32 indexed hash, address seller, address taker, uint256 price);\\n\\n\\n  constructor() {\\n //   require(_feePercent <= 10000, \\\"input value is more than 100%\\\");\\n    feeAddress = msg.sender;\\n    feePercent = 5000;\\n  }\\n\\n\\n  // view fx\\n  function getCurrentPrice(bytes32 _order) public view returns (uint256) {\\n    Order storage o = orderInfo[_order];\\n    uint8 orderType = o.orderType;\\n    if (orderType == 0) {\\n      return o.startPrice;\\n    } else if (orderType == 2) {\\n      uint256 lastBidPrice = o.lastBidPrice;\\n      return lastBidPrice == 0 ? o.startPrice : lastBidPrice;\\n    } else {\\n      uint256 _startPrice = o.startPrice;\\n      uint256 _startBlock = o.startBlock;\\n      uint256 tickPerBlock = (_startPrice - o.endPrice) / (o.endBlock - _startBlock);\\n      return _startPrice - ((block.number - _startBlock) * tickPerBlock);\\n    }\\n  }\\n\\n  function tokenOrderLength(IERC721 _token, uint256 _id) external view returns (uint256) {\\n    return orderIdByToken[_token][_id].length;\\n  }\\n\\n  function sellerOrderLength(address _seller) external view returns (uint256) {\\n    return orderIdBySeller[_seller].length;\\n  }\\n\\n\\n  // make order fx\\n  //0:Fixed Price, 1:Dutch Auction, 2:English Auction\\n  function dutchAuction(IERC721 _token, uint256 _id, uint256 _startPrice, uint256 _endPrice, uint256 _endBlock) public {\\n    require(_startPrice > _endPrice, \\\"End price should be lower than start price\\\");\\n    _makeOrder(1, _token, _id, _startPrice, _endPrice, _endBlock);\\n  }  //sp != ep\\n\\n  function englishAuction(IERC721 _token, uint256 _id, uint256 _startPrice, uint256 _endBlock) public {\\n    _makeOrder(2, _token, _id, _startPrice, 0, _endBlock);\\n  } //ep=0. for gas saving.\\n\\n  function fixedPrice(IERC721 _token, uint256 _id, uint256 _price, uint256 _endBlock) public {\\n    _makeOrder(0, _token, _id, _price, 0, _endBlock);\\n  }  //ep=0. for gas saving.\\n\\n  function _makeOrder(\\n    uint8 _orderType,\\n    IERC721 _token,\\n    uint256 _id,\\n    uint256 _startPrice,\\n    uint256 _endPrice,\\n    uint256 _endBlock\\n  ) internal {\\n    require(_endBlock > block.number, \\\"Duration must be more than zero\\\");\\n\\n    //push\\n    bytes32 hash = _hash(_token, _id, msg.sender);\\n    orderInfo[hash] = Order(_orderType, msg.sender, _token, _id, _startPrice, _endPrice, block.number, _endBlock, 0, address(0), false);\\n    orderIdByToken[_token][_id].push(hash);\\n    orderIdBySeller[msg.sender].push(hash);\\n\\n    //check if seller has a right to transfer the NFT token. safeTransferFrom.\\n    _token.safeTransferFrom(msg.sender, address(this), _id);\\n\\n    emit MakeOrder(_token, _id, hash, msg.sender);\\n  }\\n\\n  function _hash(IERC721 _token, uint256 _id, address _seller) internal view returns (bytes32) {\\n    return keccak256(abi.encodePacked(block.number, _token, _id, _seller));\\n  }\\n  \\n  // take order fx\\n  //you have to pay only ETH for bidding and buying.\\n\\n  //In this contract, since send function is used instead of transfer or low-level call function,\\n  //if a participant is a contract, it must have receive payable function.\\n  //But if it has some code in either receive or fallback fx, they might not be able to receive their ETH.\\n  //Even though some contracts can't receive their ETH, the transaction won't be failed.\\n\\n  //Bids must be at least 5% higher than the previous bid.\\n  //If someone bids in the last 5 minutes of an auction, the auction will automatically extend by 5 minutes.\\n  function bid(bytes32 _order) payable external {\\n    Order storage o = orderInfo[_order];\\n    uint256 endBlock = o.endBlock;\\n    uint256 lastBidPrice = o.lastBidPrice;\\n    address lastBidder = o.lastBidder;\\n\\n    require(o.orderType == 2, \\\"only for English Auction\\\");\\n    require(endBlock != 0, \\\"Canceled order\\\");\\n    require(block.number <= endBlock, \\\"It's over\\\");\\n    require(o.seller != msg.sender, \\\"Can not bid to your order\\\");\\n\\n    if (lastBidPrice != 0) {\\n      require(msg.value >= lastBidPrice + (lastBidPrice / 20), \\\"low price bid\\\");  //5%\\n    } else {\\n      require(msg.value >= o.startPrice && msg.value > 0, \\\"low price bid\\\");\\n    }\\n\\n    if (block.number > endBlock - 20) {  //20blocks = 5 mins in Etherium.\\n      o.endBlock = endBlock + 20;\\n    }\\n\\n    o.lastBidder = msg.sender;\\n    o.lastBidPrice = msg.value;\\n\\n    if (lastBidPrice != 0) {\\n      payable(lastBidder).send(lastBidPrice);\\n    }\\n    \\n    emit Bid(o.token, o.tokenId, _order, msg.sender, msg.value);\\n  }\\n\\n  function buyItNow(bytes32 _order) payable external {\\n    Order storage o = orderInfo[_order];\\n    uint256 endBlock = o.endBlock;\\n    require(endBlock != 0, \\\"Canceled order\\\");\\n    require(endBlock > block.number, \\\"It's over\\\");\\n    require(o.orderType < 2, \\\"It's a English Auction\\\");\\n    require(o.isSold == false, \\\"Already sold\\\");\\n\\n    uint256 currentPrice = getCurrentPrice(_order);\\n    require(msg.value >= currentPrice, \\\"price error\\\");\\n\\n    o.isSold = true;    //reentrancy proof\\n\\n    uint256 fee = currentPrice * feePercent / 10000;\\n    payable(o.seller).send(currentPrice - fee);\\n    payable(feeAddress).send(fee);\\n    if (msg.value > currentPrice) {\\n      payable(msg.sender).send(msg.value - currentPrice);\\n    }\\n\\n    o.token.safeTransferFrom(address(this), msg.sender, o.tokenId);\\n\\n    emit Claim(o.token, o.tokenId, _order, o.seller, msg.sender, currentPrice);\\n  }\\n\\n  //both seller and taker can call this fx in English Auction. Probably the taker(last bidder) might call this fx.\\n  //In both DA and FP, buyItNow fx include claim fx.\\n  function claim(bytes32 _order) external {\\n    Order storage o = orderInfo[_order];\\n    address seller = o.seller;\\n    address lastBidder = o.lastBidder;\\n    require(o.isSold == false, \\\"Already sold\\\");\\n\\n    require(seller == msg.sender || lastBidder == msg.sender, \\\"Access denied\\\");\\n    require(o.orderType == 2, \\\"This function is for English Auction\\\");\\n    require(block.number > o.endBlock, \\\"Not yet\\\");\\n\\n    IERC721 token = o.token;\\n    uint256 tokenId = o.tokenId;\\n    uint256 lastBidPrice = o.lastBidPrice;\\n\\n    uint256 fee = lastBidPrice * feePercent / 10000;\\n\\n    o.isSold = true;\\n\\n    payable(seller).send(lastBidPrice - fee);\\n    payable(feeAddress).send(fee);\\n    token.safeTransferFrom(address(this), lastBidder, tokenId);\\n\\n    emit Claim(token, tokenId, _order, seller, lastBidder, lastBidPrice);\\n  }\\n\\n\\n  function cancelOrder(bytes32 _order) external {\\n    Order storage o = orderInfo[_order];\\n    require(o.seller == msg.sender, \\\"Access denied\\\");\\n    require(o.lastBidPrice == 0, \\\"Bidding exist\\\"); //for EA. but even in DA, FP, seller can withdraw his/her token with this fx.\\n    require(o.isSold == false, \\\"Already sold\\\");\\n\\n    IERC721 token = o.token;\\n    uint256 tokenId = o.tokenId;\\n\\n    o.endBlock = 0;   //0 endBlock means the order was canceled.\\n\\n    token.safeTransferFrom(address(this), msg.sender, tokenId);\\n    emit CancelOrder(token, tokenId, _order, msg.sender);\\n  }\\n\\n  //feeAddress must be either an EOA or a contract must have payable receive fx and doesn't have some codes in that fx.\\n  //If not, it might be that it won't be receive any fee.\\n  function setFeeAddress(address _feeAddress) external onlyOwner {\\n    feeAddress = _feeAddress;\\n  }\\n\\n  function updateFeePercent(uint16 _percent) external onlyOwner {\\n    require(_percent <= 10000, \\\"input value is more than 100%\\\");\\n    feePercent = _percent;\\n  }\\n\\n}\",\"keccak256\":\"0xe2b07a7280b5c908bff8632365296ac7ea2ec4be89aa4dc4673e7d15d4b1896e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a33610040565b600480546001600160b01b0319163361ffff60a01b19161761027160a31b179055610090565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6119898061009f6000396000f3fe60806040526004361061012a5760003560e01c80637fd6f15c116100ab5780638da5cb5b1161006f5780638da5cb5b14610462578063957bb1e014610480578063a04a86bd14610493578063bd66528a146104b3578063f2fde38b146104d3578063f4dae74c146104f35761012a565b80637fd6f15c146103a45780638035eb5c146103d95780638705fcd4146103f95780638aae982a146104195780638ba39adb1461044f5761012a565b8063238e203f116100f2578063238e203f1461022b578063275e086c146103175780634127535814610337578063715018a61461036f5780637489ec23146103845761012a565b806308745c981461012f578063093dff7d14610162578063150b7a0214610184578063161e444e146101c857806319daa108146101e8575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611744565b610513565b6040519081526020015b60405180910390f35b34801561016e57600080fd5b5061018261017d3660046117f5565b610544565b005b34801561019057600080fd5b506101af61019f36600461166b565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610159565b3480156101d457600080fd5b5061014f6101e336600461176f565b6105c1565b3480156101f457600080fd5b5061014f610203366004611744565b6001600160a01b03919091166000908152600160209081526040808320938352929052205490565b34801561023757600080fd5b506102af61024636600461176f565b600360208190526000918252604090912080546001820154600283015493830154600484015460058501546006860154600787015460089097015460ff808816996001600160a01b036101009099048916999789169890979290811691600160a01b909104168b565b6040805160ff909c168c526001600160a01b039a8b1660208d0152988a16988b019890985260608a0196909652608089019490945260a088019290925260c087015260e086015261010085015291909116610120830152151561014082015261016001610159565b34801561032357600080fd5b5061014f610332366004611787565b610676565b34801561034357600080fd5b50600454610357906001600160a01b031681565b6040516001600160a01b039091168152602001610159565b34801561037b57600080fd5b506101826106b4565b34801561039057600080fd5b5061018261039f36600461176f565b6106c8565b3480156103b057600080fd5b506004546103c690600160a01b900461ffff1681565b60405161ffff9091168152602001610159565b3480156103e557600080fd5b506101826103f43660046117bb565b610853565b34801561040557600080fd5b50610182610414366004611648565b610869565b34801561042557600080fd5b5061014f610434366004611648565b6001600160a01b031660009081526002602052604090205490565b61018261045d36600461176f565b610893565b34801561046e57600080fd5b506000546001600160a01b0316610357565b61018261048e36600461176f565b610b88565b34801561049f57600080fd5b506101826104ae366004611838565b610e48565b3480156104bf57600080fd5b506101826104ce36600461176f565b610ec8565b3480156104df57600080fd5b506101826104ee366004611648565b611197565b3480156104ff57600080fd5b5061018261050e3660046117bb565b611210565b6002602052816000526040600020818154811061052f57600080fd5b90600052602060002001600091509150505481565b8183116105ab5760405162461bcd60e51b815260206004820152602a60248201527f456e642070726963652073686f756c64206265206c6f776572207468616e20736044820152697461727420707269636560b01b60648201526084015b60405180910390fd5b6105ba6001868686868661121c565b5050505050565b6000818152600360205260408120805460ff16806105e55750600301549050610671565b8060ff166002141561061257600782015480156106025780610608565b82600301545b9350505050610671565b60038201546005830154600684015460009061062f9083906118fb565b600486015461063e90856118fb565b61064891906118bc565b90508061065583436118fb565b61065f91906118dc565b61066990846118fb565b955050505050505b919050565b6001602052826000526040600020602052816000526040600020818154811061069e57600080fd5b9060005260206000200160009250925050505481565b6106bc61159e565b6106c660006115f8565b565b6000818152600360205260409020805461010090046001600160a01b031633146107245760405162461bcd60e51b815260206004820152600d60248201526c1058d8d95cdcc819195b9a5959609a1b60448201526064016105a2565b6007810154156107665760405162461bcd60e51b815260206004820152600d60248201526c109a59191a5b99c8195e1a5cdd609a1b60448201526064016105a2565b6008810154600160a01b900460ff16156107925760405162461bcd60e51b81526004016105a29061187e565b6001810154600282015460006006840155604051632142170760e11b81526001600160a01b039092169182906342842e0e906107d69030903390869060040161185a565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b5050604080518481523360208201528793506001600160a01b03861692507f856ac238bc6f4bb0c966003f34f148bf0ef3b60f266e451474de23ff78196c8b910160405180910390a350505050565b610863600085858560008661121c565b50505050565b61087161159e565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60008181526003602052604090206006810154806108e45760405162461bcd60e51b815260206004820152600e60248201526d21b0b731b2b632b21037b93232b960911b60448201526064016105a2565b43811161091f5760405162461bcd60e51b815260206004820152600960248201526824ba13b99037bb32b960b91b60448201526064016105a2565b8154600260ff9091161061096e5760405162461bcd60e51b815260206004820152601660248201527524ba13b990309022b733b634b9b41020bab1ba34b7b760511b60448201526064016105a2565b6008820154600160a01b900460ff161561099a5760405162461bcd60e51b81526004016105a29061187e565b60006109a5846105c1565b9050803410156109e55760405162461bcd60e51b815260206004820152600b60248201526a383934b1b29032b93937b960a91b60448201526064016105a2565b60088301805460ff60a01b1916600160a01b90811790915560045460009161271091610a179161ffff910416846118dc565b610a2191906118bc565b845490915061010090046001600160a01b03166108fc610a4183856118fb565b6040518115909202916000818181858888f150506004546040516001600160a01b03909116935084156108fc0292508491506000818181858888f193505050505081341115610ab057336108fc610a9884346118fb565b6040518115909202916000818181858888f150505050505b60018401546002850154604051632142170760e11b81526001600160a01b03909216916342842e0e91610ae9913091339160040161185a565b600060405180830381600087803b158015610b0357600080fd5b505af1158015610b17573d6000803e3d6000fd5b50505050600184015460028501548554604080519283526001600160a01b0361010090920482166020840152339083015260608201859052879216907f37a6d1163573be2522695f96cbee3037bf297187c0378e8903ac1ae0192f699f906080015b60405180910390a35050505050565b600081815260036020526040902060068101546007820154600883015483546001600160a01b039091169060ff16600214610c055760405162461bcd60e51b815260206004820152601860248201527f6f6e6c7920666f7220456e676c6973682041756374696f6e000000000000000060448201526064016105a2565b82610c435760405162461bcd60e51b815260206004820152600e60248201526d21b0b731b2b632b21037b93232b960911b60448201526064016105a2565b82431115610c7f5760405162461bcd60e51b815260206004820152600960248201526824ba13b99037bb32b960b91b60448201526064016105a2565b835461010090046001600160a01b0316331415610cde5760405162461bcd60e51b815260206004820152601960248201527f43616e206e6f742062696420746f20796f7572206f726465720000000000000060448201526064016105a2565b8115610d3d57610cef6014836118bc565b610cf990836118a4565b341015610d385760405162461bcd60e51b815260206004820152600d60248201526c1b1bddc81c1c9a58d948189a59609a1b60448201526064016105a2565b610d8d565b83600301543410158015610d515750600034115b610d8d5760405162461bcd60e51b815260206004820152600d60248201526c1b1bddc81c1c9a58d948189a59609a1b60448201526064016105a2565b610d986014846118fb565b431115610db057610daa8360146118a4565b60068501555b6008840180546001600160a01b031916331790553460078501558115610df6576040516001600160a01b0382169083156108fc029084906000818181858888f150505050505b6001840154600285015460408051918252336020830152349082015286916001600160a01b0316907f7f99059564a74b5d2e3fbf994dec403ab0af5688c9a4e86ca2a933688eaf223b90606001610b79565b610e5061159e565b6127108161ffff161115610ea65760405162461bcd60e51b815260206004820152601d60248201527f696e7075742076616c7565206973206d6f7265207468616e203130302500000060448201526064016105a2565b6004805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6000818152600360205260409020805460088201546001600160a01b0361010090920482169181169060ff600160a01b9091041615610f195760405162461bcd60e51b81526004016105a29061187e565b6001600160a01b038216331480610f3857506001600160a01b03811633145b610f745760405162461bcd60e51b815260206004820152600d60248201526c1058d8d95cdcc819195b9a5959609a1b60448201526064016105a2565b825460ff16600214610fd45760405162461bcd60e51b8152602060048201526024808201527f546869732066756e6374696f6e20697320666f7220456e676c697368204175636044820152633a34b7b760e11b60648201526084016105a2565b826006015443116110115760405162461bcd60e51b8152602060048201526007602482015266139bdd081e595d60ca1b60448201526064016105a2565b6001830154600284015460078501546004546001600160a01b03909316926000906127109061104b90600160a01b900461ffff16846118dc565b61105591906118bc565b60088801805460ff60a01b1916600160a01b17905590506001600160a01b0386166108fc61108383856118fb565b6040518115909202916000818181858888f150506004546040516001600160a01b03909116935084156108fc0292508491506000818181858888f15050604051632142170760e11b81526001600160a01b03881693506342842e0e92506110f3915030908990889060040161185a565b600060405180830381600087803b15801561110d57600080fd5b505af1158015611121573d6000803e3d6000fd5b5050505087846001600160a01b03167f37a6d1163573be2522695f96cbee3037bf297187c0378e8903ac1ae0192f699f8589898760405161118594939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a35050505050505050565b61119f61159e565b6001600160a01b0381166112045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a2565b61120d816115f8565b50565b61086360028585856000865b43811161126b5760405162461bcd60e51b815260206004820152601f60248201527f4475726174696f6e206d757374206265206d6f7265207468616e207a65726f0060448201526064016105a2565b60408051436020808301919091526bffffffffffffffffffffffff19606089811b8216848601526054840189905233901b16607483015282518083036068018152608890920190925280519101206040518061016001604052808860ff168152602001336001600160a01b03168152602001876001600160a01b031681526020018681526020018581526020018481526020014381526020018381526020016000815260200160006001600160a01b03168152602001600015158152506003600083815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101408201518160080160146101000a81548160ff02191690831515021790555090505060016000876001600160a01b03166001600160a01b03168152602001908152602001600020600086815260200190815260200160002081908060018154018082558091505060019003906000526020600020016000909190919091505560026000336001600160a01b03166001600160a01b03168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055856001600160a01b03166342842e0e3330886040518463ffffffff1660e01b815260040161151e9392919061185a565b600060405180830381600087803b15801561153857600080fd5b505af115801561154c573d6000803e3d6000fd5b5050604080518881523360208201528493506001600160a01b038a1692507f165b17602125a20b222f9736f06d776e39507d7dc60ddef32ccc23ea2f1b50e5910160405180910390a350505050505050565b6000546001600160a01b031633146106c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215611659578081fd5b81356116648161193e565b9392505050565b60008060008060808587031215611680578283fd5b843561168b8161193e565b9350602085013561169b8161193e565b925060408501359150606085013567ffffffffffffffff808211156116be578283fd5b818701915087601f8301126116d1578283fd5b8135818111156116e3576116e3611928565b604051601f8201601f19908116603f0116810190838211818310171561170b5761170b611928565b816040528281528a6020848701011115611723578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611756578182fd5b82356117618161193e565b946020939093013593505050565b600060208284031215611780578081fd5b5035919050565b60008060006060848603121561179b578283fd5b83356117a68161193e565b95602085013595506040909401359392505050565b600080600080608085870312156117d0578384fd5b84356117db8161193e565b966020860135965060408601359560600135945092505050565b600080600080600060a0868803121561180c578081fd5b85356118178161193e565b97602087013597506040870135966060810135965060800135945092505050565b600060208284031215611849578081fd5b813561ffff81168114611664578182fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252600c908201526b105b1c9958591e481cdbdb1960a21b604082015260600190565b600082198211156118b7576118b7611912565b500190565b6000826118d757634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156118f6576118f6611912565b500290565b60008282101561190d5761190d611912565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461120d57600080fdfea2646970667358221220f5826be919903e81833fa209404416ee795aa1fa95b5586ad3a36755620b604d64736f6c63430008030033",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c80637fd6f15c116100ab5780638da5cb5b1161006f5780638da5cb5b14610462578063957bb1e014610480578063a04a86bd14610493578063bd66528a146104b3578063f2fde38b146104d3578063f4dae74c146104f35761012a565b80637fd6f15c146103a45780638035eb5c146103d95780638705fcd4146103f95780638aae982a146104195780638ba39adb1461044f5761012a565b8063238e203f116100f2578063238e203f1461022b578063275e086c146103175780634127535814610337578063715018a61461036f5780637489ec23146103845761012a565b806308745c981461012f578063093dff7d14610162578063150b7a0214610184578063161e444e146101c857806319daa108146101e8575b600080fd5b34801561013b57600080fd5b5061014f61014a366004611744565b610513565b6040519081526020015b60405180910390f35b34801561016e57600080fd5b5061018261017d3660046117f5565b610544565b005b34801561019057600080fd5b506101af61019f36600461166b565b630a85bd0160e11b949350505050565b6040516001600160e01b03199091168152602001610159565b3480156101d457600080fd5b5061014f6101e336600461176f565b6105c1565b3480156101f457600080fd5b5061014f610203366004611744565b6001600160a01b03919091166000908152600160209081526040808320938352929052205490565b34801561023757600080fd5b506102af61024636600461176f565b600360208190526000918252604090912080546001820154600283015493830154600484015460058501546006860154600787015460089097015460ff808816996001600160a01b036101009099048916999789169890979290811691600160a01b909104168b565b6040805160ff909c168c526001600160a01b039a8b1660208d0152988a16988b019890985260608a0196909652608089019490945260a088019290925260c087015260e086015261010085015291909116610120830152151561014082015261016001610159565b34801561032357600080fd5b5061014f610332366004611787565b610676565b34801561034357600080fd5b50600454610357906001600160a01b031681565b6040516001600160a01b039091168152602001610159565b34801561037b57600080fd5b506101826106b4565b34801561039057600080fd5b5061018261039f36600461176f565b6106c8565b3480156103b057600080fd5b506004546103c690600160a01b900461ffff1681565b60405161ffff9091168152602001610159565b3480156103e557600080fd5b506101826103f43660046117bb565b610853565b34801561040557600080fd5b50610182610414366004611648565b610869565b34801561042557600080fd5b5061014f610434366004611648565b6001600160a01b031660009081526002602052604090205490565b61018261045d36600461176f565b610893565b34801561046e57600080fd5b506000546001600160a01b0316610357565b61018261048e36600461176f565b610b88565b34801561049f57600080fd5b506101826104ae366004611838565b610e48565b3480156104bf57600080fd5b506101826104ce36600461176f565b610ec8565b3480156104df57600080fd5b506101826104ee366004611648565b611197565b3480156104ff57600080fd5b5061018261050e3660046117bb565b611210565b6002602052816000526040600020818154811061052f57600080fd5b90600052602060002001600091509150505481565b8183116105ab5760405162461bcd60e51b815260206004820152602a60248201527f456e642070726963652073686f756c64206265206c6f776572207468616e20736044820152697461727420707269636560b01b60648201526084015b60405180910390fd5b6105ba6001868686868661121c565b5050505050565b6000818152600360205260408120805460ff16806105e55750600301549050610671565b8060ff166002141561061257600782015480156106025780610608565b82600301545b9350505050610671565b60038201546005830154600684015460009061062f9083906118fb565b600486015461063e90856118fb565b61064891906118bc565b90508061065583436118fb565b61065f91906118dc565b61066990846118fb565b955050505050505b919050565b6001602052826000526040600020602052816000526040600020818154811061069e57600080fd5b9060005260206000200160009250925050505481565b6106bc61159e565b6106c660006115f8565b565b6000818152600360205260409020805461010090046001600160a01b031633146107245760405162461bcd60e51b815260206004820152600d60248201526c1058d8d95cdcc819195b9a5959609a1b60448201526064016105a2565b6007810154156107665760405162461bcd60e51b815260206004820152600d60248201526c109a59191a5b99c8195e1a5cdd609a1b60448201526064016105a2565b6008810154600160a01b900460ff16156107925760405162461bcd60e51b81526004016105a29061187e565b6001810154600282015460006006840155604051632142170760e11b81526001600160a01b039092169182906342842e0e906107d69030903390869060040161185a565b600060405180830381600087803b1580156107f057600080fd5b505af1158015610804573d6000803e3d6000fd5b5050604080518481523360208201528793506001600160a01b03861692507f856ac238bc6f4bb0c966003f34f148bf0ef3b60f266e451474de23ff78196c8b910160405180910390a350505050565b610863600085858560008661121c565b50505050565b61087161159e565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b60008181526003602052604090206006810154806108e45760405162461bcd60e51b815260206004820152600e60248201526d21b0b731b2b632b21037b93232b960911b60448201526064016105a2565b43811161091f5760405162461bcd60e51b815260206004820152600960248201526824ba13b99037bb32b960b91b60448201526064016105a2565b8154600260ff9091161061096e5760405162461bcd60e51b815260206004820152601660248201527524ba13b990309022b733b634b9b41020bab1ba34b7b760511b60448201526064016105a2565b6008820154600160a01b900460ff161561099a5760405162461bcd60e51b81526004016105a29061187e565b60006109a5846105c1565b9050803410156109e55760405162461bcd60e51b815260206004820152600b60248201526a383934b1b29032b93937b960a91b60448201526064016105a2565b60088301805460ff60a01b1916600160a01b90811790915560045460009161271091610a179161ffff910416846118dc565b610a2191906118bc565b845490915061010090046001600160a01b03166108fc610a4183856118fb565b6040518115909202916000818181858888f150506004546040516001600160a01b03909116935084156108fc0292508491506000818181858888f193505050505081341115610ab057336108fc610a9884346118fb565b6040518115909202916000818181858888f150505050505b60018401546002850154604051632142170760e11b81526001600160a01b03909216916342842e0e91610ae9913091339160040161185a565b600060405180830381600087803b158015610b0357600080fd5b505af1158015610b17573d6000803e3d6000fd5b50505050600184015460028501548554604080519283526001600160a01b0361010090920482166020840152339083015260608201859052879216907f37a6d1163573be2522695f96cbee3037bf297187c0378e8903ac1ae0192f699f906080015b60405180910390a35050505050565b600081815260036020526040902060068101546007820154600883015483546001600160a01b039091169060ff16600214610c055760405162461bcd60e51b815260206004820152601860248201527f6f6e6c7920666f7220456e676c6973682041756374696f6e000000000000000060448201526064016105a2565b82610c435760405162461bcd60e51b815260206004820152600e60248201526d21b0b731b2b632b21037b93232b960911b60448201526064016105a2565b82431115610c7f5760405162461bcd60e51b815260206004820152600960248201526824ba13b99037bb32b960b91b60448201526064016105a2565b835461010090046001600160a01b0316331415610cde5760405162461bcd60e51b815260206004820152601960248201527f43616e206e6f742062696420746f20796f7572206f726465720000000000000060448201526064016105a2565b8115610d3d57610cef6014836118bc565b610cf990836118a4565b341015610d385760405162461bcd60e51b815260206004820152600d60248201526c1b1bddc81c1c9a58d948189a59609a1b60448201526064016105a2565b610d8d565b83600301543410158015610d515750600034115b610d8d5760405162461bcd60e51b815260206004820152600d60248201526c1b1bddc81c1c9a58d948189a59609a1b60448201526064016105a2565b610d986014846118fb565b431115610db057610daa8360146118a4565b60068501555b6008840180546001600160a01b031916331790553460078501558115610df6576040516001600160a01b0382169083156108fc029084906000818181858888f150505050505b6001840154600285015460408051918252336020830152349082015286916001600160a01b0316907f7f99059564a74b5d2e3fbf994dec403ab0af5688c9a4e86ca2a933688eaf223b90606001610b79565b610e5061159e565b6127108161ffff161115610ea65760405162461bcd60e51b815260206004820152601d60248201527f696e7075742076616c7565206973206d6f7265207468616e203130302500000060448201526064016105a2565b6004805461ffff909216600160a01b0261ffff60a01b19909216919091179055565b6000818152600360205260409020805460088201546001600160a01b0361010090920482169181169060ff600160a01b9091041615610f195760405162461bcd60e51b81526004016105a29061187e565b6001600160a01b038216331480610f3857506001600160a01b03811633145b610f745760405162461bcd60e51b815260206004820152600d60248201526c1058d8d95cdcc819195b9a5959609a1b60448201526064016105a2565b825460ff16600214610fd45760405162461bcd60e51b8152602060048201526024808201527f546869732066756e6374696f6e20697320666f7220456e676c697368204175636044820152633a34b7b760e11b60648201526084016105a2565b826006015443116110115760405162461bcd60e51b8152602060048201526007602482015266139bdd081e595d60ca1b60448201526064016105a2565b6001830154600284015460078501546004546001600160a01b03909316926000906127109061104b90600160a01b900461ffff16846118dc565b61105591906118bc565b60088801805460ff60a01b1916600160a01b17905590506001600160a01b0386166108fc61108383856118fb565b6040518115909202916000818181858888f150506004546040516001600160a01b03909116935084156108fc0292508491506000818181858888f15050604051632142170760e11b81526001600160a01b03881693506342842e0e92506110f3915030908990889060040161185a565b600060405180830381600087803b15801561110d57600080fd5b505af1158015611121573d6000803e3d6000fd5b5050505087846001600160a01b03167f37a6d1163573be2522695f96cbee3037bf297187c0378e8903ac1ae0192f699f8589898760405161118594939291909384526001600160a01b03928316602085015291166040830152606082015260800190565b60405180910390a35050505050505050565b61119f61159e565b6001600160a01b0381166112045760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a2565b61120d816115f8565b50565b61086360028585856000865b43811161126b5760405162461bcd60e51b815260206004820152601f60248201527f4475726174696f6e206d757374206265206d6f7265207468616e207a65726f0060448201526064016105a2565b60408051436020808301919091526bffffffffffffffffffffffff19606089811b8216848601526054840189905233901b16607483015282518083036068018152608890920190925280519101206040518061016001604052808860ff168152602001336001600160a01b03168152602001876001600160a01b031681526020018681526020018581526020018481526020014381526020018381526020016000815260200160006001600160a01b03168152602001600015158152506003600083815260200190815260200160002060008201518160000160006101000a81548160ff021916908360ff16021790555060208201518160000160016101000a8154816001600160a01b0302191690836001600160a01b0316021790555060408201518160010160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e0820151816006015561010082015181600701556101208201518160080160006101000a8154816001600160a01b0302191690836001600160a01b031602179055506101408201518160080160146101000a81548160ff02191690831515021790555090505060016000876001600160a01b03166001600160a01b03168152602001908152602001600020600086815260200190815260200160002081908060018154018082558091505060019003906000526020600020016000909190919091505560026000336001600160a01b03166001600160a01b03168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055856001600160a01b03166342842e0e3330886040518463ffffffff1660e01b815260040161151e9392919061185a565b600060405180830381600087803b15801561153857600080fd5b505af115801561154c573d6000803e3d6000fd5b5050604080518881523360208201528493506001600160a01b038a1692507f165b17602125a20b222f9736f06d776e39507d7dc60ddef32ccc23ea2f1b50e5910160405180910390a350505050505050565b6000546001600160a01b031633146106c65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a2565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215611659578081fd5b81356116648161193e565b9392505050565b60008060008060808587031215611680578283fd5b843561168b8161193e565b9350602085013561169b8161193e565b925060408501359150606085013567ffffffffffffffff808211156116be578283fd5b818701915087601f8301126116d1578283fd5b8135818111156116e3576116e3611928565b604051601f8201601f19908116603f0116810190838211818310171561170b5761170b611928565b816040528281528a6020848701011115611723578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215611756578182fd5b82356117618161193e565b946020939093013593505050565b600060208284031215611780578081fd5b5035919050565b60008060006060848603121561179b578283fd5b83356117a68161193e565b95602085013595506040909401359392505050565b600080600080608085870312156117d0578384fd5b84356117db8161193e565b966020860135965060408601359560600135945092505050565b600080600080600060a0868803121561180c578081fd5b85356118178161193e565b97602087013597506040870135966060810135965060800135945092505050565b600060208284031215611849578081fd5b813561ffff81168114611664578182fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252600c908201526b105b1c9958591e481cdbdb1960a21b604082015260600190565b600082198211156118b7576118b7611912565b500190565b6000826118d757634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156118f6576118f6611912565b500290565b60008282101561190d5761190d611912565b500390565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461120d57600080fdfea2646970667358221220f5826be919903e81833fa209404416ee795aa1fa95b5586ad3a36755620b604d64736f6c63430008030033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/BunyAuction.sol:BunyAuction",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 348,
        "contract": "contracts/BunyAuction.sol:BunyAuction",
        "label": "orderIdByToken",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_contract(IERC721)228,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))"
      },
      {
        "astId": 353,
        "contract": "contracts/BunyAuction.sol:BunyAuction",
        "label": "orderIdBySeller",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_array(t_bytes32)dyn_storage)"
      },
      {
        "astId": 358,
        "contract": "contracts/BunyAuction.sol:BunyAuction",
        "label": "orderInfo",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_struct(Order)340_storage)"
      },
      {
        "astId": 360,
        "contract": "contracts/BunyAuction.sol:BunyAuction",
        "label": "feeAddress",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      },
      {
        "astId": 362,
        "contract": "contracts/BunyAuction.sol:BunyAuction",
        "label": "feePercent",
        "offset": 20,
        "slot": "4",
        "type": "t_uint16"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "base": "t_bytes32",
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(IERC721)228": {
        "encoding": "inplace",
        "label": "contract IERC721",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_mapping(t_bytes32,t_struct(Order)340_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct BunyAuction.Order)",
        "numberOfBytes": "32",
        "value": "t_struct(Order)340_storage"
      },
      "t_mapping(t_contract(IERC721)228,t_mapping(t_uint256,t_array(t_bytes32)dyn_storage))": {
        "encoding": "mapping",
        "key": "t_contract(IERC721)228",
        "label": "mapping(contract IERC721 => mapping(uint256 => bytes32[]))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)"
      },
      "t_mapping(t_uint256,t_array(t_bytes32)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => bytes32[])",
        "numberOfBytes": "32",
        "value": "t_array(t_bytes32)dyn_storage"
      },
      "t_struct(Order)340_storage": {
        "encoding": "inplace",
        "label": "struct BunyAuction.Order",
        "members": [
          {
            "astId": 318,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "orderType",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8"
          },
          {
            "astId": 320,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "seller",
            "offset": 1,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 323,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "token",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(IERC721)228"
          },
          {
            "astId": 325,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "tokenId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 327,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "startPrice",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 329,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "endPrice",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 331,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "startBlock",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 333,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "endBlock",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 335,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "lastBidPrice",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          },
          {
            "astId": 337,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "lastBidder",
            "offset": 0,
            "slot": "8",
            "type": "t_address"
          },
          {
            "astId": 339,
            "contract": "contracts/BunyAuction.sol:BunyAuction",
            "label": "isSold",
            "offset": 20,
            "slot": "8",
            "type": "t_bool"
          }
        ],
        "numberOfBytes": "288"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}
