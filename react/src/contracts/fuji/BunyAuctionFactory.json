{
  "address": "0xCfc659740F12925Bf6926252CDfB8199edF69D4b",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "projectTreasury",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "auctionFee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bid",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "bidder",
          "type": "address"
        }
      ],
      "name": "AuctionBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "AuctionCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "startingPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "endingPrice",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "AuctionCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "winner",
          "type": "address"
        }
      ],
      "name": "AuctionFinish",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FailedPayment",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "bid",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "cancelAuctionWhenPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startingPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endingPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "createAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "finishAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getAuction",
      "outputs": [
        {
          "internalType": "address",
          "name": "seller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "startingPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "endingPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastBid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "lastBidder",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getlastBid",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftContract",
      "outputs": [
        {
          "internalType": "contract IERC721",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC721",
          "name": "nonFungibleContract",
          "type": "address"
        }
      ],
      "name": "setNFTContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "withdrawUnclaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x82886635ec1b055d9e9d29d395c5959b297caa06d5a01490c85257121cc45796",
  "receipt": {
    "to": null,
    "from": "0x8406A51A0E1B5F52Ff61226773e6328e5Da5d964",
    "contractAddress": "0xCfc659740F12925Bf6926252CDfB8199edF69D4b",
    "transactionIndex": 0,
    "gasUsed": "1504396",
    "logsBloom": "0x
    "blockHash": "0x5a0c16678660d4804b479ee79d7312ae1b72f268b9689c42310b08b3101d5f08",
    "transactionHash": "0x82886635ec1b055d9e9d29d395c5959b297caa06d5a01490c85257121cc45796",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 15134741,
        "transactionHash": "0x82886635ec1b055d9e9d29d395c5959b297caa06d5a01490c85257121cc45796",
        "address": "0xCfc659740F12925Bf6926252CDfB8199edF69D4b",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008406a51a0e1b5f52ff61226773e6328e5da5d964"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x5a0c16678660d4804b479ee79d7312ae1b72f268b9689c42310b08b3101d5f08"
      }
    ],
    "blockNumber": 15134741,
    "cumulativeGasUsed": "1504396",
    "status": 1,
    "byzantium": true
  },
  "args": ["0x8406A51A0E1B5F52Ff61226773e6328e5Da5d964", "0"],
  "numDeployments": 1,
  "solcInputHash": "76e4f10f4e3b38cc4cb768f44963d083",
  "metadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"projectTreasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"auctionFee\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"}],\"name\":\"AuctionBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"AuctionCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endingPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"winner\",\"type\":\"address\"}],\"name\":\"AuctionFinish\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FailedPayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"cancelAuctionWhenPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"createAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"finishAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getAuction\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"startingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endingPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastBid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lastBidder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getlastBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"nonFungibleContract\",\"type\":\"address\"}],\"name\":\"setNFTContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdrawUnclaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BunyAuctionFactory.sol\":\"BunyAuctionFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/Pausable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which allows children to implement an emergency stop\\n * mechanism that can be triggered by an authorized account.\\n *\\n * This module is used through inheritance. It will make available the\\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\\n * the functions of your contract. Note that they will not be pausable by\\n * simply including this module, only once the modifiers are put in place.\\n */\\nabstract contract Pausable is Context {\\n    /**\\n     * @dev Emitted when the pause is triggered by `account`.\\n     */\\n    event Paused(address account);\\n\\n    /**\\n     * @dev Emitted when the pause is lifted by `account`.\\n     */\\n    event Unpaused(address account);\\n\\n    bool private _paused;\\n\\n    /**\\n     * @dev Initializes the contract in unpaused state.\\n     */\\n    constructor() {\\n        _paused = false;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is not paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    modifier whenNotPaused() {\\n        _requireNotPaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Modifier to make a function callable only when the contract is paused.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    modifier whenPaused() {\\n        _requirePaused();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns true if the contract is paused, and false otherwise.\\n     */\\n    function paused() public view virtual returns (bool) {\\n        return _paused;\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is paused.\\n     */\\n    function _requireNotPaused() internal view virtual {\\n        require(!paused(), \\\"Pausable: paused\\\");\\n    }\\n\\n    /**\\n     * @dev Throws if the contract is not paused.\\n     */\\n    function _requirePaused() internal view virtual {\\n        require(paused(), \\\"Pausable: not paused\\\");\\n    }\\n\\n    /**\\n     * @dev Triggers stopped state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must not be paused.\\n     */\\n    function _pause() internal virtual whenNotPaused {\\n        _paused = true;\\n        emit Paused(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns to normal state.\\n     *\\n     * Requirements:\\n     *\\n     * - The contract must be paused.\\n     */\\n    function _unpause() internal virtual whenPaused {\\n        _paused = false;\\n        emit Unpaused(_msgSender());\\n    }\\n}\\n\",\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/BunyAuctionFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.16;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/IERC721.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/Pausable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/security/ReentrancyGuard.sol\\\";\\r\\nimport \\\"./SafePayment.sol\\\";\\r\\n\\r\\ncontract BunyAuctionFactory is Ownable, Pausable, ReentrancyGuard, SafePayment {\\r\\n    event AuctionCreated(\\r\\n        uint256 tokenId,\\r\\n        uint256 startingPrice,\\r\\n        uint256 endingPrice,\\r\\n        uint256 duration\\r\\n    );\\r\\n    event AuctionBid(uint256 tokenId, uint256 bid, address bidder);\\r\\n    event AuctionFinish(uint256 tokenId, uint256 price, address winner);\\r\\n    event AuctionCancelled(uint256 tokenId);\\r\\n\\r\\n    IERC721 public nftContract;\\r\\n    uint256 private immutable _auctionFee;\\r\\n    address private immutable _projectTreasury;\\r\\n    mapping(uint256 => Auction) private _tokenIdAuction;\\r\\n\\r\\n    struct Auction {\\r\\n        uint128 startingPrice;\\r\\n        uint128 endingPrice;\\r\\n        uint64 duration;\\r\\n        address seller;\\r\\n        uint64 startedAt;\\r\\n        address lastBidder;\\r\\n        uint256 lastBid;\\r\\n    }\\r\\n\\r\\n    constructor(address projectTreasury, uint256 auctionFee) {\\r\\n        require(auctionFee <= 0, \\\"auctionFee too high\\\");\\r\\n        _projectTreasury = projectTreasury;\\r\\n        _auctionFee = auctionFee;\\r\\n    }\\r\\n\\r\\n    function setNFTContract(IERC721 nonFungibleContract) external onlyOwner {\\r\\n        require(address(nftContract) == address(0), \\\"NFT Contract already set\\\");\\r\\n        require(\\r\\n            nonFungibleContract.supportsInterface(type(IERC721).interfaceId),\\r\\n            \\\"Non NFT contract\\\"\\r\\n        );\\r\\n        nftContract = nonFungibleContract;\\r\\n    }\\r\\n\\r\\n    function _isAuction(Auction storage _auction) internal view returns (bool) {\\r\\n        return (_auction.startedAt > 0);\\r\\n    }\\r\\n\\r\\n    function _isAuctionOpen(Auction storage _auction)\\r\\n        internal\\r\\n        view\\r\\n        returns (bool)\\r\\n    {\\r\\n        return (_auction.startedAt > 0 &&\\r\\n            _auction.startedAt + _auction.duration > block.timestamp);\\r\\n    }\\r\\n\\r\\n    function _isAuctionFinish(Auction storage _auction)\\r\\n        internal\\r\\n        view\\r\\n        returns (bool)\\r\\n    {\\r\\n        return (_auction.startedAt > 0 &&\\r\\n            _auction.startedAt + _auction.duration <= block.timestamp);\\r\\n    }\\r\\n\\r\\n    function pause() public onlyOwner {\\r\\n        _pause();\\r\\n    }\\r\\n\\r\\n    function unpause() public onlyOwner {\\r\\n        _unpause();\\r\\n    }\\r\\n\\r\\n    function createAuction(\\r\\n        uint256 tokenId,\\r\\n        uint256 startingPrice,\\r\\n        uint256 endingPrice,\\r\\n        uint256 duration\\r\\n    ) external whenNotPaused {\\r\\n        /* solhint-disable reason-string */\\r\\n        // Check Overflow\\r\\n        require(startingPrice == uint256(uint128(startingPrice)));\\r\\n        require(endingPrice == uint256(uint128(endingPrice)));\\r\\n        require(duration == uint256(uint64(duration)));\\r\\n        require(endingPrice > startingPrice);\\r\\n        require(duration >= 1 minutes);\\r\\n        /* solhint-disable reason-string */\\r\\n        require(_tokenIdAuction[tokenId].startedAt == 0, \\\"Running Auction\\\");\\r\\n\\r\\n        address nftOwner = nftContract.ownerOf(tokenId);\\r\\n        require(\\r\\n            msg.sender == owner() || msg.sender == nftOwner,\\r\\n            \\\"Not Authorized\\\"\\r\\n        );\\r\\n\\r\\n        // Escrow NFT\\r\\n        nftContract.transferFrom(nftOwner, address(this), tokenId);\\r\\n\\r\\n        Auction memory auction = Auction(\\r\\n            uint128(startingPrice),\\r\\n            uint128(endingPrice),\\r\\n            uint64(duration),\\r\\n            nftOwner,\\r\\n            uint64(block.timestamp),\\r\\n            address(0),\\r\\n            0\\r\\n        );\\r\\n        _tokenIdAuction[tokenId] = auction;\\r\\n\\r\\n        emit AuctionCreated(\\r\\n            uint256(tokenId),\\r\\n            uint256(auction.startingPrice),\\r\\n            uint256(auction.endingPrice),\\r\\n            uint256(auction.duration)\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function bid(uint256 tokenId) external payable whenNotPaused nonReentrant {\\r\\n        Auction storage auction = _tokenIdAuction[tokenId];\\r\\n        require(_isAuctionOpen(auction), \\\"Auction not open\\\");\\r\\n\\r\\n        // TODO Close Auction on endingPrice reached\\r\\n        require(auction.lastBid < auction.endingPrice, \\\"endingPrice reached\\\");\\r\\n\\r\\n        require(msg.value > auction.startingPrice, \\\"bid bellow min price\\\");\\r\\n        require(msg.value > auction.lastBid, \\\"bid bellow last bid\\\");\\r\\n        // TODO control max bid\\r\\n        // require(msg.value < auction.lastBid + maxBid, \\\"bid too high\\\");\\r\\n\\r\\n        uint256 newBid = msg.value;\\r\\n        if (newBid > auction.endingPrice) {\\r\\n            safeSendETH(msg.sender, newBid - auction.endingPrice);\\r\\n            newBid = auction.endingPrice;\\r\\n        }\\r\\n\\r\\n        if (auction.lastBid > 0) {\\r\\n            safeSendETH(auction.lastBidder, auction.lastBid);\\r\\n        }\\r\\n        auction.lastBidder = msg.sender;\\r\\n        auction.lastBid = newBid;\\r\\n\\r\\n        emit AuctionBid(tokenId, newBid, msg.sender);\\r\\n    }\\r\\n\\r\\n    function cancelAuction(uint256 tokenId)\\r\\n        external\\r\\n        whenNotPaused\\r\\n        nonReentrant\\r\\n    {\\r\\n        Auction storage auction = _tokenIdAuction[tokenId];\\r\\n        require(_isAuctionOpen(auction), \\\"Auction not open\\\");\\r\\n        require(msg.sender == auction.seller, \\\"Only seller can cancel\\\");\\r\\n\\r\\n        if (auction.lastBid > 0) {\\r\\n            safeSendETH(auction.lastBidder, auction.lastBid);\\r\\n        }\\r\\n        nftContract.transferFrom(address(this), auction.seller, tokenId);\\r\\n\\r\\n        delete _tokenIdAuction[tokenId];\\r\\n        emit AuctionCancelled(tokenId);\\r\\n    }\\r\\n\\r\\n    function cancelAuctionWhenPaused(uint256 tokenId)\\r\\n        external\\r\\n        whenPaused\\r\\n        onlyOwner\\r\\n    {\\r\\n        Auction storage auction = _tokenIdAuction[tokenId];\\r\\n        require(_isAuction(auction), \\\"Not Auction\\\");\\r\\n\\r\\n        if (auction.lastBid > 0) {\\r\\n            safeSendETH(auction.lastBidder, auction.lastBid);\\r\\n        }\\r\\n        nftContract.transferFrom(address(this), auction.seller, tokenId);\\r\\n\\r\\n        delete _tokenIdAuction[tokenId];\\r\\n        emit AuctionCancelled(tokenId);\\r\\n    }\\r\\n\\r\\n    function finishAuction(uint256 tokenId)\\r\\n        external\\r\\n        whenNotPaused\\r\\n        nonReentrant\\r\\n    {\\r\\n        Auction storage auction = _tokenIdAuction[tokenId];\\r\\n        require(\\r\\n            _isAuctionFinish(auction) || auction.lastBid == auction.endingPrice,\\r\\n            \\\"Auction not finish\\\"\\r\\n        );\\r\\n\\r\\n        if (auction.lastBid == 0) {\\r\\n            nftContract.transferFrom(address(this), auction.seller, tokenId);\\r\\n            emit AuctionFinish(tokenId, 0, auction.seller);\\r\\n        } else {\\r\\n            nftContract.transferFrom(\\r\\n                address(this),\\r\\n                auction.lastBidder,\\r\\n                tokenId\\r\\n            );\\r\\n            uint256 treasuryFee = (auction.lastBid * _auctionFee) / 10000;\\r\\n            uint256 sellerProceeds = auction.lastBid - treasuryFee;\\r\\n            safeSendETH(_projectTreasury, treasuryFee);\\r\\n            safeSendETH(auction.seller, sellerProceeds);\\r\\n            emit AuctionFinish(tokenId, auction.lastBid, auction.lastBidder);\\r\\n        }\\r\\n        delete _tokenIdAuction[tokenId];\\r\\n    }\\r\\n\\r\\n    function withdrawUnclaimed(address to)\\r\\n        external\\r\\n        whenPaused\\r\\n        onlyOwner\\r\\n        returns (bool)\\r\\n    {\\r\\n        return getUnclaimed(to);\\r\\n    }\\r\\n\\r\\n    function getAuction(uint256 tokenId)\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            address seller,\\r\\n            uint256 startingPrice,\\r\\n            uint256 endingPrice,\\r\\n            uint256 duration,\\r\\n            uint256 startedAt,\\r\\n            uint256 lastBid,\\r\\n            address lastBidder\\r\\n        )\\r\\n    {\\r\\n        Auction storage auction = _tokenIdAuction[tokenId];\\r\\n        require(_isAuction(auction), \\\"Not Auction\\\");\\r\\n        return (\\r\\n            auction.seller,\\r\\n            auction.startingPrice,\\r\\n            auction.endingPrice,\\r\\n            auction.duration,\\r\\n            auction.startedAt,\\r\\n            auction.lastBid,\\r\\n            auction.lastBidder\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getlastBid(uint256 tokenId) external view returns (uint256) {\\r\\n        Auction storage auction = _tokenIdAuction[tokenId];\\r\\n        require(_isAuction(auction), \\\"Not Auction\\\");\\r\\n        return auction.lastBid;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xcd419f3c712182a910e6cb76435cc8000af91810b4cb0f0d2c29b72272dab4ed\",\"license\":\"MIT\"},\"contracts/SafePayment.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.16;\\r\\n\\r\\nabstract contract SafePayment {\\r\\n    event FailedPayment(address to, uint256 amount);\\r\\n\\r\\n    uint256 private constant GAS_LIMIT = 3_000;\\r\\n    bool private _payLock = false;\\r\\n    uint256 private _unclaimed;\\r\\n\\r\\n    function safeSendETH(address to, uint256 amount)\\r\\n        internal\\r\\n        returns (bool success)\\r\\n    {\\r\\n        require(!_payLock); // solhint-disable-line reason-string\\r\\n        _payLock = true;\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (success, ) = payable(to).call{value: amount, gas: GAS_LIMIT}(\\\"\\\");\\r\\n        if (!success) {\\r\\n            _unclaimed += amount;\\r\\n            emit FailedPayment(to, amount);\\r\\n        }\\r\\n        _payLock = false;\\r\\n    }\\r\\n\\r\\n    function getUnclaimed(address to) internal returns (bool success) {\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (success, ) = payable(to).call{value: _unclaimed}(\\\"\\\");\\r\\n        if (success) {\\r\\n            _unclaimed = 0;\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa17331024b1cf2000c7498ab722a11b70fba04bb6abac046a4ba0ef2b86a196b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040526002805460ff1916905534801561001a57600080fd5b5060405162001ab638038062001ab683398101604081905261003b9161010d565b610044336100bd565b6000805460ff60a01b191690556001805580156100a75760405162461bcd60e51b815260206004820152601360248201527f61756374696f6e46656520746f6f206869676800000000000000000000000000604482015260640160405180910390fd5b6001600160a01b0390911660a052608052610147565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806040838503121561012057600080fd5b82516001600160a01b038116811461013757600080fd5b6020939093015192949293505050565b60805160a0516119496200016d60003960006111c10152600061116e01526119496000f3fe6080604052600436106100f35760003560e01c8063878eb3681161008a578063cf266ed011610059578063cf266ed0146102b3578063d56d229d146102d3578063d5f20926146102f3578063f2fde38b1461032157600080fd5b8063878eb368146102215780638da5cb5b1461024157806396b5a75514610273578063a7ccabdf1461029357600080fd5b80635c975abb116100c65780635c975abb14610177578063715018a61461019657806378bd7935146101ab5780638456cb591461020c57600080fd5b80630fadea30146100f85780633f4ba83a1461012d578063431f21da14610144578063454a2ab314610164575b600080fd5b34801561010457600080fd5b5061011861011336600461173b565b610341565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b50610142610364565b005b34801561015057600080fd5b5061014261015f36600461175f565b610376565b610142610172366004611791565b6107a3565b34801561018357600080fd5b50600054600160a01b900460ff16610118565b3480156101a257600080fd5b50610142610a1c565b3480156101b757600080fd5b506101cb6101c6366004611791565b610a2e565b604080516001600160a01b03988916815260208101979097528601949094526060850192909252608084015260a083015290911660c082015260e001610124565b34801561021857600080fd5b50610142610ad2565b34801561022d57600080fd5b5061014261023c366004611791565b610ae2565b34801561024d57600080fd5b506000546001600160a01b03165b6040516001600160a01b039091168152602001610124565b34801561027f57600080fd5b5061014261028e366004611791565b610c43565b34801561029f57600080fd5b506101426102ae36600461173b565b610e41565b3480156102bf57600080fd5b506101426102ce366004611791565b610f72565b3480156102df57600080fd5b5060045461025b906001600160a01b031681565b3480156102ff57600080fd5b5061031361030e366004611791565b6112a5565b604051908152602001610124565b34801561032d57600080fd5b5061014261033c36600461173b565b6112e7565b600061034b611360565b6103536113b0565b61035c8261140a565b90505b919050565b61036c6113b0565b610374611470565b565b61037e6114c5565b826001600160801b0316831461039357600080fd5b816001600160801b031682146103a857600080fd5b806001600160401b031681146103bd57600080fd5b8282116103c957600080fd5b603c8110156103d757600080fd5b6000848152600560205260409020600201546001600160401b0316156104365760405162461bcd60e51b815260206004820152600f60248201526e293ab73734b7339020bab1ba34b7b760891b60448201526064015b60405180910390fd5b600480546040516331a9108f60e11b81529182018690526000916001600160a01b0390911690636352211e90602401602060405180830381865afa158015610482573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a691906117aa565b90506104ba6000546001600160a01b031690565b6001600160a01b0316336001600160a01b031614806104e15750336001600160a01b038216145b61051e5760405162461bcd60e51b815260206004820152600e60248201526d139bdd08105d5d1a1bdc9a5e995960921b604482015260640161042d565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd9161055191859130918b91016117c7565b600060405180830381600087803b15801561056b57600080fd5b505af115801561057f573d6000803e3d6000fd5b5050505060006040518060e00160405280866001600160801b03168152602001856001600160801b03168152602001846001600160401b03168152602001836001600160a01b03168152602001426001600160401b0316815260200160006001600160a01b0316815260200160008152509050806005600088815260200190815260200160002060008201518160000160006101000a8154816001600160801b0302191690836001600160801b0316021790555060208201518160000160106101000a8154816001600160801b0302191690836001600160801b0316021790555060408201518160010160006101000a8154816001600160401b0302191690836001600160401b0316021790555060608201518160010160086101000a8154816001600160a01b0302191690836001600160a01b0316021790555060808201518160020160006101000a8154816001600160401b0302191690836001600160401b0316021790555060a08201518160020160086101000a8154816001600160a01b0302191690836001600160a01b0316021790555060c082015181600301559050507fa9c8dfcda5664a5a124c713e386da27de87432d5b668e79458501eb296389ba78682600001516001600160801b031683602001516001600160801b031684604001516001600160401b0316604051610793949392919093845260208401929092526040830152606082015260800190565b60405180910390a1505050505050565b6107ab6114c5565b6002600154036107cd5760405162461bcd60e51b815260040161042d906117eb565b600260015560008181526005602052604090206107e981611512565b6108285760405162461bcd60e51b815260206004820152601060248201526f20bab1ba34b7b7103737ba1037b832b760811b604482015260640161042d565b80546003820154600160801b9091046001600160801b0316116108835760405162461bcd60e51b8152602060048201526013602482015272195b991a5b99d41c9a58d9481c995858da1959606a1b604482015260640161042d565b80546001600160801b031634116108d35760405162461bcd60e51b81526020600482015260146024820152736269642062656c6c6f77206d696e20707269636560601b604482015260640161042d565b8060030154341161091c5760405162461bcd60e51b8152602060048201526013602482015272189a590818995b1b1bddc81b185cdd08189a59606a1b604482015260640161042d565b80543490600160801b90046001600160801b031681111561097357815461095e90339061095990600160801b90046001600160801b031684611838565b61155e565b50508054600160801b90046001600160801b03165b6003820154156109a357600282015460038301546109a191600160401b90046001600160a01b03169061155e565b505b60028201805468010000000000000000600160e01b03191633600160401b810291909117909155600383018290556040805185815260208101849052908101919091527ff9008dd91005935024ba5a41d46d0e6b9da928da99a364a8db10ea053f6b49c99060600160405180910390a150506001805550565b610a246113b0565b6103746000611646565b600081815260056020526040812060028101548291829182918291829182916001600160401b0316610a725760405162461bcd60e51b815260040161042d90611851565b600181015481546002830154600390930154600160401b8084046001600160a01b039081169e6001600160801b038086169f50600160801b9095049094169c506001600160401b039485169b509385169950909750909204169350915050565b610ada6113b0565b610374611696565b610aea611360565b610af26113b0565b600081815260056020526040902060028101546001600160401b0316610b2a5760405162461bcd60e51b815260040161042d90611851565b600381015415610b5a5760028101546003820154610b5891600160401b90046001600160a01b03169061155e565b505b6004805460018301546040516323b872dd60e01b81526001600160a01b03928316936323b872dd93610b9c933093600160401b909104909116918891016117c7565b600060405180830381600087803b158015610bb657600080fd5b505af1158015610bca573d6000803e3d6000fd5b5050506000838152600560205260408082208281556001810180546001600160e01b0319908116909155600282018054909116905560030191909155517f2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df9150610c379084815260200190565b60405180910390a15050565b610c4b6114c5565b600260015403610c6d5760405162461bcd60e51b815260040161042d906117eb565b60026001556000818152600560205260409020610c8981611512565b610cc85760405162461bcd60e51b815260206004820152601060248201526f20bab1ba34b7b7103737ba1037b832b760811b604482015260640161042d565b6001810154600160401b90046001600160a01b03163314610d245760405162461bcd60e51b815260206004820152601660248201527513db9b1e481cd95b1b195c8818d85b8818d85b98d95b60521b604482015260640161042d565b600381015415610d545760028101546003820154610d5291600160401b90046001600160a01b03169061155e565b505b6004805460018301546040516323b872dd60e01b81526001600160a01b03928316936323b872dd93610d96933093600160401b909104909116918891016117c7565b600060405180830381600087803b158015610db057600080fd5b505af1158015610dc4573d6000803e3d6000fd5b5050506000838152600560205260408082208281556001810180546001600160e01b0319908116909155600282018054909116905560030191909155517f2809c7e17bf978fbc7194c0a694b638c4215e9140cacc6c38ca36010b45697df9150610e319084815260200190565b60405180910390a1505060018055565b610e496113b0565b6004546001600160a01b031615610ea25760405162461bcd60e51b815260206004820152601860248201527f4e465420436f6e747261637420616c7265616479207365740000000000000000604482015260640161042d565b6040516301ffc9a760e01b81526380ac58cd60e01b60048201526001600160a01b038216906301ffc9a790602401602060405180830381865afa158015610eed573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f119190611876565b610f505760405162461bcd60e51b815260206004820152601060248201526f139bdb881391950818dbdb9d1c9858dd60821b604482015260640161042d565b600480546001600160a01b0319166001600160a01b0392909216919091179055565b610f7a6114c5565b600260015403610f9c5760405162461bcd60e51b815260040161042d906117eb565b60026001556000818152600560205260409020610fb8816116d9565b80610fd8575080546003820154600160801b9091046001600160801b0316145b6110195760405162461bcd60e51b8152602060048201526012602482015271082eac6e8d2dedc40dcdee840ccd2dcd2e6d60731b604482015260640161042d565b80600301546000036110f3576004805460018301546040516323b872dd60e01b81526001600160a01b03928316936323b872dd93611067933093600160401b909104909116918891016117c7565b600060405180830381600087803b15801561108157600080fd5b505af1158015611095573d6000803e3d6000fd5b5050505060018101546040805184815260006020820152600160401b9092046001600160a01b0316908201527ff1848f7aff3da0dce4a8740e984d7802ab25aa91710f782086fd6958e4baea6d9060600160405180910390a1611265565b6004805460028301546040516323b872dd60e01b81526001600160a01b03928316936323b872dd93611135933093600160401b909104909116918891016117c7565b600060405180830381600087803b15801561114f57600080fd5b505af1158015611163573d6000803e3d6000fd5b5050505060006127107f0000000000000000000000000000000000000000000000000000000000000000836003015461119c9190611898565b6111a691906118b7565b905060008183600301546111ba9190611838565b90506111e67f00000000000000000000000000000000000000000000000000000000000000008361155e565b50600183015461120690600160401b90046001600160a01b03168261155e565b5060038301546002840154604080518781526020810193909352600160401b9091046001600160a01b0316908201527ff1848f7aff3da0dce4a8740e984d7802ab25aa91710f782086fd6958e4baea6d9060600160405180910390a150505b506000908152600560205260408120818155600180820180546001600160e01b031990811690915560028301805490911690556003909101919091558055565b600081815260056020526040812060028101546001600160401b03166112dd5760405162461bcd60e51b815260040161042d90611851565b6003015492915050565b6112ef6113b0565b6001600160a01b0381166113545760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161042d565b61135d81611646565b50565b600054600160a01b900460ff166103745760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161042d565b6000546001600160a01b031633146103745760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161042d565b6003546040516000916001600160a01b038416918381818185875af1925050503d8060008114611456576040519150601f19603f3d011682016040523d82523d6000602084013e61145b565b606091505b5090915050801561035f576000600355919050565b611478611360565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600054600160a01b900460ff16156103745760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161042d565b60028101546000906001600160401b03161580159061035c575060018201546002830154429161154e916001600160401b0391821691166118d9565b6001600160401b03161192915050565b60025460009060ff161561157157600080fd5b6002805460ff191660011790556040516001600160a01b03841690610bb89084906000818181858888f193505050503d80600081146115cc576040519150601f19603f3d011682016040523d82523d6000602084013e6115d1565b606091505b505080915050806116365781600360008282546115ee9190611900565b9091555050604080516001600160a01b0385168152602081018490527fac464fe4d3a86b9121261ac0a01dd981bfe0777c7c9d9c8f4473d31a9c0f9d2d910160405180910390a15b6002805460ff1916905592915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61169e6114c5565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114a83390565b60028101546000906001600160401b03161580159061035c5750600182015460028301544291611715916001600160401b0391821691166118d9565b6001600160401b0316111592915050565b6001600160a01b038116811461135d57600080fd5b60006020828403121561174d57600080fd5b813561175881611726565b9392505050565b6000806000806080858703121561177557600080fd5b5050823594602084013594506040840135936060013592509050565b6000602082840312156117a357600080fd5b5035919050565b6000602082840312156117bc57600080fd5b815161175881611726565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052601160045260246000fd5b8181038181111561184b5761184b611822565b92915050565b6020808252600b908201526a2737ba1020bab1ba34b7b760a91b604082015260600190565b60006020828403121561188857600080fd5b8151801515811461175857600080fd5b60008160001904831182151516156118b2576118b2611822565b500290565b6000826118d457634e487b7160e01b600052601260045260246000fd5b500490565b6001600160401b038181168382160190808211156118f9576118f9611822565b5092915050565b8082018082111561184b5761184b61182256fea2646970667358221220c48de6c0ef1cf0627e63a788014f52449b8128032b28dc8d59d05a80a9b1361b64736f6c63430008100033",
  "deployedBytecode": "",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 130,
        "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
        "label": "_paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 231,
        "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
        "label": "_status",
        "offset": 0,
        "slot": "1",
        "type": "t_uint256"
      },
      {
        "astId": 3429,
        "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
        "label": "_payLock",
        "offset": 0,
        "slot": "2",
        "type": "t_bool"
      },
      {
        "astId": 3431,
        "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
        "label": "_unclaimed",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2114,
        "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
        "label": "nftContract",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(IERC721)1243"
      },
      {
        "astId": 2123,
        "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
        "label": "_tokenIdAuction",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Auction)2138_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IERC721)1243": {
        "encoding": "inplace",
        "label": "contract IERC721",
        "numberOfBytes": "20"
      },
      "t_mapping(t_uint256,t_struct(Auction)2138_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct BunyAuctionFactory.Auction)",
        "numberOfBytes": "32",
        "value": "t_struct(Auction)2138_storage"
      },
      "t_struct(Auction)2138_storage": {
        "encoding": "inplace",
        "label": "struct BunyAuctionFactory.Auction",
        "members": [
          {
            "astId": 2125,
            "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
            "label": "startingPrice",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 2127,
            "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
            "label": "endingPrice",
            "offset": 16,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 2129,
            "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
            "label": "duration",
            "offset": 0,
            "slot": "1",
            "type": "t_uint64"
          },
          {
            "astId": 2131,
            "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
            "label": "seller",
            "offset": 8,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 2133,
            "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
            "label": "startedAt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint64"
          },
          {
            "astId": 2135,
            "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
            "label": "lastBidder",
            "offset": 8,
            "slot": "2",
            "type": "t_address"
          },
          {
            "astId": 2137,
            "contract": "contracts/BunyAuctionFactory.sol:BunyAuctionFactory",
            "label": "lastBid",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  }
}
