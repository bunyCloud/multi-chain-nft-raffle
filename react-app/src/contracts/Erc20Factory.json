{
  "address": "0x7139A4fF66C5D8a268b56AE32d6fd434552b262f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "FactoryDeprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldFee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newFee",
          "type": "uint256"
        }
      ],
      "name": "MinimumFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "TokenDeployed",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "acceptOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "children",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "deployTokenContract",
      "outputs": [
        {
          "internalType": "contract FixedSupplyToken",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newAddress",
          "type": "address"
        }
      ],
      "name": "deprecateFactory",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isChild",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "newOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "numberOfChildren",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokens",
          "type": "uint256"
        }
      ],
      "name": "recoverTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_minimumFee",
          "type": "uint256"
        }
      ],
      "name": "setMinimumFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0548ba9ab8ea70265300d3e120d510f071cd7fd4ec320c9f97c3e24372b40ea5",
  "receipt": {
    "to": null,
    "from": "0x8406A51A0E1B5F52Ff61226773e6328e5Da5d964",
    "contractAddress": "0x7139A4fF66C5D8a268b56AE32d6fd434552b262f",
    "transactionIndex": 0,
    "gasUsed": "1656253",
    "logsBloom": "0x
    "blockHash": "0xd4501a1f31a26c315fad324d74cf908cc073f09eff6f8f7b46e093af76606b75",
    "transactionHash": "0x0548ba9ab8ea70265300d3e120d510f071cd7fd4ec320c9f97c3e24372b40ea5",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 13019300,
        "transactionHash": "0x0548ba9ab8ea70265300d3e120d510f071cd7fd4ec320c9f97c3e24372b40ea5",
        "address": "0x7139A4fF66C5D8a268b56AE32d6fd434552b262f",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000008406a51a0e1b5f52ff61226773e6328e5da5d964"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xd4501a1f31a26c315fad324d74cf908cc073f09eff6f8f7b46e093af76606b75"
      }
    ],
    "blockNumber": 13019300,
    "cumulativeGasUsed": "1656253",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "f1ffa1a6a056a0378a4edf38e6022887",
  "metadata": "{\"compiler\":{\"version\":\"0.6.9+commit.3e3065ac\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"FactoryDeprecated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"MinimumFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"TokenDeployed\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"children\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"deployTokenContract\",\"outputs\":[{\"internalType\":\"contract FixedSupplyToken\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"deprecateFactory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isChild\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numberOfChildren\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"recoverTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_minimumFee\",\"type\":\"uint256\"}],\"name\":\"setMinimumFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Dutch/contracts/Tokens/Erc20Factory.sol\":\"Erc20Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Dutch/contracts/Tokens/Erc20Factory.sol\":{\"content\":\"pragma solidity ^0.6.9;\\r\\n\\r\\n// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\nimport \\\"../Utils/SafeMathPlus.sol\\\";\\r\\nimport \\\"../Utils/Owned.sol\\\";\\r\\nimport \\\"../../interfaces/IERC20.sol\\\";\\r\\n\\r\\n// ----------------------------------------------------------------------------\\r\\n// ApproveAndCall Fallback\\r\\n// NOTE for contracts implementing this interface:\\r\\n// 1. An error must be thrown if there are errors executing `transferFrom(...)`\\r\\n// 2. The calling token contract must be checked to prevent malicious behaviour\\r\\n// ----------------------------------------------------------------------------\\r\\ninterface ApproveAndCallFallback {\\r\\n  function receiveApproval(\\r\\n    address from,\\r\\n    uint256 tokens,\\r\\n    address token,\\r\\n    bytes memory data\\r\\n  ) external;\\r\\n}\\r\\n\\r\\n// ----------------------------------------------------------------------------\\r\\n// Token Interface = ERC20 + symbol + name + decimals + approveAndCall\\r\\n// ----------------------------------------------------------------------------\\r\\ninterface TokenInterface is IERC20 {\\r\\n  function approveAndCall(\\r\\n    address spender,\\r\\n    uint256 tokens,\\r\\n    bytes memory data\\r\\n  ) external returns (bool success);\\r\\n}\\r\\n\\r\\n// ----------------------------------------------------------------------------\\r\\n// FixedSupplyToken \\ud83d\\udc4a = ERC20 + symbol + name + decimals + approveAndCall\\r\\n// ----------------------------------------------------------------------------\\r\\ncontract FixedSupplyToken is TokenInterface, Owned {\\r\\n  using SafeMathPlus for uint256;\\r\\n\\r\\n  string _symbol;\\r\\n  string _name;\\r\\n  uint8 _decimals;\\r\\n  uint256 _totalSupply;\\r\\n\\r\\n  mapping(address => uint256) balances;\\r\\n  mapping(address => mapping(address => uint256)) allowed;\\r\\n\\r\\n  function init(\\r\\n    address tokenOwner,\\r\\n    string memory symbol,\\r\\n    string memory name,\\r\\n    uint8 decimals,\\r\\n    uint256 fixedSupply\\r\\n  ) public {\\r\\n    _initOwned(tokenOwner);\\r\\n    _symbol = symbol;\\r\\n    _name = name;\\r\\n    _decimals = decimals;\\r\\n    _totalSupply = fixedSupply;\\r\\n    balances[tokenOwner] = _totalSupply;\\r\\n    emit Transfer(address(0), tokenOwner, _totalSupply);\\r\\n  }\\r\\n\\r\\n  function symbol() public view override returns (string memory) {\\r\\n    return _symbol;\\r\\n  }\\r\\n\\r\\n  function name() public view override returns (string memory) {\\r\\n    return _name;\\r\\n  }\\r\\n\\r\\n  function decimals() public view override returns (uint8) {\\r\\n    return _decimals;\\r\\n  }\\r\\n\\r\\n  function totalSupply() public view override returns (uint256) {\\r\\n    return _totalSupply.sub(balances[address(0)]);\\r\\n  }\\r\\n\\r\\n  function balanceOf(address tokenOwner)\\r\\n    public\\r\\n    view\\r\\n    override\\r\\n    returns (uint256 balance)\\r\\n  {\\r\\n    return balances[tokenOwner];\\r\\n  }\\r\\n\\r\\n  function transfer(address to, uint256 tokens)\\r\\n    public\\r\\n    override\\r\\n    returns (bool success)\\r\\n  {\\r\\n    balances[msg.sender] = balances[msg.sender].sub(tokens);\\r\\n    balances[to] = balances[to].add(tokens);\\r\\n    emit Transfer(msg.sender, to, tokens);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  function approve(address spender, uint256 tokens)\\r\\n    public\\r\\n    override\\r\\n    returns (bool success)\\r\\n  {\\r\\n    allowed[msg.sender][spender] = tokens;\\r\\n    emit Approval(msg.sender, spender, tokens);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  function transferFrom(\\r\\n    address from,\\r\\n    address to,\\r\\n    uint256 tokens\\r\\n  ) public override returns (bool success) {\\r\\n    balances[from] = balances[from].sub(tokens);\\r\\n    allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\\r\\n    balances[to] = balances[to].add(tokens);\\r\\n    emit Transfer(from, to, tokens);\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  function allowance(address tokenOwner, address spender)\\r\\n    public\\r\\n    view\\r\\n    override\\r\\n    returns (uint256 remaining)\\r\\n  {\\r\\n    return allowed[tokenOwner][spender];\\r\\n  }\\r\\n\\r\\n  // NOTE Only use this call with a trusted spender contract\\r\\n  function approveAndCall(\\r\\n    address spender,\\r\\n    uint256 tokens,\\r\\n    bytes memory data\\r\\n  ) public override returns (bool success) {\\r\\n    allowed[msg.sender][spender] = tokens;\\r\\n    emit Approval(msg.sender, spender, tokens);\\r\\n    ApproveAndCallFallback(spender).receiveApproval(\\r\\n      msg.sender,\\r\\n      tokens,\\r\\n      address(this),\\r\\n      data\\r\\n    );\\r\\n    return true;\\r\\n  }\\r\\n\\r\\n  receive() external payable {\\r\\n    revert();\\r\\n  }\\r\\n}\\r\\n\\r\\n// ----------------------------------------------------------------------------\\r\\n// BokkyPooBah's Fixed Supply Token \\ud83d\\udc4a Factory\\r\\n//\\r\\n// Notes:\\r\\n//   * The `newContractAddress` deprecation is just advisory\\r\\n//   * A fee equal to or above `minimumFee` must be sent with the\\r\\n//   `deployTokenContract(...)` call\\r\\n//\\r\\n// Execute `deployTokenContract(...)` with the following parameters to deploy\\r\\n// your very own FixedSupplyToken contract:\\r\\n//   symbol         symbol\\r\\n//   name           name\\r\\n//   decimals       number of decimal places for the token contract\\r\\n//   totalSupply    the fixed token total supply\\r\\n//\\r\\n// For example, deploying a FixedSupplyToken contract with a `totalSupply`\\r\\n// of 1,000.000000000000000000 tokens:\\r\\n//   symbol         \\\"ME\\\"\\r\\n//   name           \\\"My Token\\\"\\r\\n//   decimals       18\\r\\n//   initialSupply  10000000000000000000000 = 1,000.000000000000000000 tokens\\r\\n//\\r\\n// The TokenDeployed() event is logged with the following parameters:\\r\\n//   owner          the account that execute this transaction\\r\\n//   token          the newly deployed FixedSupplyToken address\\r\\n//   symbol         symbol\\r\\n//   name           name\\r\\n//   decimals       number of decimal places for the token contract\\r\\n//   totalSupply    the fixed token total supply\\r\\n// ----------------------------------------------------------------------------\\r\\ncontract Erc20Factory is Owned {\\r\\n  using SafeMathPlus for uint256;\\r\\n\\r\\n  address public newAddress;\\r\\n  uint256 public minimumFee = 0.1 ether;\\r\\n  mapping(address => bool) public isChild;\\r\\n  address[] public children;\\r\\n\\r\\n  event FactoryDeprecated(address _newAddress);\\r\\n  event MinimumFeeUpdated(uint256 oldFee, uint256 newFee);\\r\\n  event TokenDeployed(\\r\\n    address indexed owner,\\r\\n    address indexed token,\\r\\n    string symbol,\\r\\n    string name,\\r\\n    uint8 decimals,\\r\\n    uint256 totalSupply\\r\\n  );\\r\\n\\r\\n  constructor() public {\\r\\n    _initOwned(msg.sender);\\r\\n  }\\r\\n\\r\\n  function numberOfChildren() public view returns (uint256) {\\r\\n    return children.length;\\r\\n  }\\r\\n\\r\\n  function deprecateFactory(address _newAddress) public {\\r\\n    require(isOwner());\\r\\n    require(newAddress == address(0));\\r\\n    emit FactoryDeprecated(_newAddress);\\r\\n    newAddress = _newAddress;\\r\\n  }\\r\\n\\r\\n  function setMinimumFee(uint256 _minimumFee) public {\\r\\n    require(isOwner());\\r\\n    emit MinimumFeeUpdated(minimumFee, _minimumFee);\\r\\n    minimumFee = _minimumFee;\\r\\n  }\\r\\n\\r\\n  function deployTokenContract(\\r\\n    string memory symbol,\\r\\n    string memory name,\\r\\n    uint8 decimals,\\r\\n    uint256 totalSupply\\r\\n  ) public payable returns (FixedSupplyToken token) {\\r\\n    require(msg.value >= minimumFee);\\r\\n    require(decimals <= 27);\\r\\n    require(totalSupply > 0);\\r\\n    token = new FixedSupplyToken();\\r\\n    token.init(msg.sender, symbol, name, decimals, totalSupply);\\r\\n    isChild[address(token)] = true;\\r\\n    children.push(address(token));\\r\\n    emit TokenDeployed(\\r\\n      owner(),\\r\\n      address(token),\\r\\n      symbol,\\r\\n      name,\\r\\n      decimals,\\r\\n      totalSupply\\r\\n    );\\r\\n    if (msg.value > 0) {\\r\\n      payable(owner()).transfer(msg.value);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  receive() external payable {\\r\\n    revert();\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x8838bf7daec69c02f927b41c4ad2a34a8142ae8dc41954b0d8ad7ee8b60336cb\",\"license\":\"GPL-3.0\"},\"contracts/Dutch/contracts/Utils/Owned.sol\":{\"content\":\"pragma solidity ^0.6.9;\\r\\n\\r\\n\\r\\nimport \\\"../../interfaces/IERC20.sol\\\";\\r\\n\\r\\n\\r\\ncontract Owned {\\r\\n\\r\\n    address private mOwner;   \\r\\n    bool private initialised;    \\r\\n    address public newOwner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    modifier onlyOwner() {\\r\\n        require(isOwner());\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    function _initOwned(address _owner) internal {\\r\\n        require(!initialised);\\r\\n        mOwner = address(uint160(_owner));\\r\\n        initialised = true;\\r\\n        emit OwnershipTransferred(address(0), mOwner);\\r\\n    }\\r\\n\\r\\n    function owner() public view returns (address) {\\r\\n        return mOwner;\\r\\n    }\\r\\n    function isOwner() public view returns (bool) {\\r\\n        return msg.sender == mOwner;\\r\\n    }\\r\\n\\r\\n    function transferOwnership(address _newOwner) public {\\r\\n        require(isOwner());\\r\\n        newOwner = _newOwner;\\r\\n    }\\r\\n\\r\\n    function acceptOwnership() public {\\r\\n        require(msg.sender == newOwner);\\r\\n        emit OwnershipTransferred(mOwner, newOwner);\\r\\n        mOwner = address(uint160(newOwner));\\r\\n        newOwner = address(0);\\r\\n    }\\r\\n    function recoverTokens(address token, uint tokens) public {\\r\\n        require(isOwner());\\r\\n        if (token == address(0)) {\\r\\n            payable(mOwner).transfer((tokens == 0 ? address(this).balance : tokens));\\r\\n        } else {\\r\\n            IERC20(token).transfer(mOwner, tokens == 0 ? IERC20(token).balanceOf(address(this)) : tokens);\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4175cf8f7fb91ec4bb940e94a85af50eabd021101b630d1941bb93f2b53ee7cd\"},\"contracts/Dutch/contracts/Utils/SafeMathPlus.sol\":{\"content\":\"pragma solidity ^0.6.9;\\r\\n\\r\\n/**\\r\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\r\\n * checks.\\r\\n *\\r\\n * See: https://github.com/OpenZeppelin/openzeppelin-contracts\\r\\n */\\r\\nlibrary SafeMathPlus {\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n        return c;\\r\\n    }\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n        return c;\\r\\n    }\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n        return c;\\r\\n    }\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n    function max(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        c = a >= b ? a : b;\\r\\n    }\\r\\n    function min(uint256 a, uint256 b) internal pure returns (uint256 c) {\\r\\n        c = a <= b ? a : b;\\r\\n    }\\r\\n    // babylonian method (https://en.wikipedia.org/wiki/Methods_of_computing_square_roots#Babylonian_method)\\r\\n    function sqrt(uint y) internal pure returns (uint z) {\\r\\n        if (y > 3) {\\r\\n            z = y;\\r\\n            uint x = y / 2 + 1;\\r\\n            while (x < z) {\\r\\n                z = x;\\r\\n                x = (y / x + x) / 2;\\r\\n            }\\r\\n        } else if (y != 0) {\\r\\n            z = 1;\\r\\n        }\\r\\n    }\\r\\n}\",\"keccak256\":\"0x08c2b41c1c11f76c42b8a61bf37e3efcea98dc7798c7304fc6cf0542ae30d176\"},\"contracts/Dutch/interfaces/IERC20.sol\":{\"content\":\"pragma solidity ^0.6.2;\\r\\n// SPDX-License-Identifier: UNLICENSED\\r\\n\\r\\n\\r\\ninterface IERC20 {\\r\\n    function name() external view returns (string memory);\\r\\n    function symbol() external view returns (string memory);\\r\\n    function decimals() external view returns (uint8);\\r\\n    function totalSupply() external view returns (uint256);\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    event Transfer(address indexed from, address indexed to, uint256 amount);\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 amount);\\r\\n}\\r\\n\\r\\n\",\"keccak256\":\"0x82f04c336f39d8a57fdc91236f9f28d6106c6eb1f2484e91318b19945c681169\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405267016345785d8a000060035534801561001c57600080fd5b5061002f336001600160e01b0361003416565b6100a9565b600054600160a01b900460ff161561004b57600080fd5b6000805460ff60a01b196001600160a01b038085166001600160a01b03199093169290921716600160a01b17808355604051911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b611c24806100b86000396000f3fe6080604052600436106100e15760003560e01c80638f32d59b1161007f578063d4ee1d9011610059578063d4ee1d9014610374578063de0946af14610389578063f2fde38b146103bc578063fc91a897146103ef576100eb565b80638f32d59b14610201578063ccdb3f451461022a578063cdaca7d51461023f576100eb565b8063534349f5116100bb578063534349f51461017c5780637002ce421461019157806379ba5097146101d75780638da5cb5b146101ec576100eb565b8063069c9fae146100f0578063182a75061461012b5780631a7626e714610155576100eb565b366100eb57600080fd5b600080fd5b3480156100fc57600080fd5b506101296004803603604081101561011357600080fd5b506001600160a01b038135169060200135610422565b005b34801561013757600080fd5b506101296004803603602081101561014e57600080fd5b50356105a1565b34801561016157600080fd5b5061016a6105f4565b60408051918252519081900360200190f35b34801561018857600080fd5b5061016a6105fa565b34801561019d57600080fd5b506101bb600480360360208110156101b457600080fd5b5035610600565b604080516001600160a01b039092168252519081900360200190f35b3480156101e357600080fd5b50610129610627565b3480156101f857600080fd5b506101bb6106a2565b34801561020d57600080fd5b506102166106b1565b604080519115158252519081900360200190f35b34801561023657600080fd5b506101bb6106c2565b6101bb6004803603608081101561025557600080fd5b81019060208101813564010000000081111561027057600080fd5b82018360208201111561028257600080fd5b803590602001918460018302840111640100000000831117156102a457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102f757600080fd5b82018360208201111561030957600080fd5b8035906020019184600183028401116401000000008311171561032b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505060ff83351693505050602001356106d1565b34801561038057600080fd5b506101bb610a4f565b34801561039557600080fd5b50610129600480360360208110156103ac57600080fd5b50356001600160a01b0316610a5e565b3480156103c857600080fd5b50610129600480360360208110156103df57600080fd5b50356001600160a01b0316610ae3565b3480156103fb57600080fd5b506102166004803603602081101561041257600080fd5b50356001600160a01b0316610b16565b61042a6106b1565b61043357600080fd5b6001600160a01b03821661048c576000546001600160a01b03166108fc821561045c578261045e565b475b6040518115909202916000818181858888f19350505050158015610486573d6000803e3d6000fd5b5061059d565b6000546001600160a01b038084169163a9059cbb911683156104ae5783610521565b604080516370a0823160e01b815230600482015290516001600160a01b038716916370a08231916024808301926020929190829003018186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d602081101561051e57600080fd5b50515b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561057057600080fd5b505af1158015610584573d6000803e3d6000fd5b505050506040513d602081101561059a57600080fd5b50505b5050565b6105a96106b1565b6105b257600080fd5b600354604080519182526020820183905280517fcc2f49c6214278ae5862935eff953448e8e69118d10abfafaf63ea6aa35255cb9281900390910190a1600355565b60035481565b60055490565b6005818154811061060d57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b0316331461063e57600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6002546001600160a01b031681565b60006003543410156106e257600080fd5b601b8360ff1611156106f357600080fd5b6000821161070057600080fd5b60405161070c90610b2b565b604051809103906000f080158015610728573d6000803e3d6000fd5b506040516313990a1d60e31b8152336004820181815260ff871660648401526084830186905260a060248401908152895160a485015289519495506001600160a01b03861694639cc850e8948b938b938b938b93604481019160c490910190602089019080838360005b838110156107aa578181015183820152602001610792565b50505050905090810190601f1680156107d75780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b8381101561080a5781810151838201526020016107f2565b50505050905090810190601f1680156108375780820380516001836020036101000a031916815260200191505b50975050505050505050600060405180830381600087803b15801561085b57600080fd5b505af115801561086f573d6000803e3d6000fd5b5050506001600160a01b0382166000818152600460205260408120805460ff191660019081179091556005805491820181559091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319168217905590506108e06106a2565b6001600160a01b03167f3bc7f29f3ebe37f3907a35128d9fa2a85b96814855b2e869cfbfacdd6cd11c42878787876040518080602001806020018560ff1660ff168152602001848152602001838103835287818151815260200191508051906020019080838360005b83811015610961578181015183820152602001610949565b50505050905090810190601f16801561098e5780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b838110156109c15781810151838201526020016109a9565b50505050905090810190601f1680156109ee5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a33415610a4757610a0d6106a2565b6001600160a01b03166108fc349081150290604051600060405180830381858888f19350505050158015610a45573d6000803e3d6000fd5b505b949350505050565b6001546001600160a01b031681565b610a666106b1565b610a6f57600080fd5b6002546001600160a01b031615610a8557600080fd5b604080516001600160a01b038316815290517f0ac885cfcac9d1450e80f787dbf9546001fb50414106435b10b1d27b448b86689181900360200190a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b610aeb6106b1565b610af457600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60046020526000908152604090205460ff1681565b6110b680610b398339019056fe608060405234801561001057600080fd5b50611096806100206000396000f3fe6080604052600436106101025760003560e01c80638da5cb5b11610095578063a9059cbb11610064578063a9059cbb146104ad578063cae9ca51146104e6578063d4ee1d90146105ae578063dd62ed3e146105c3578063f2fde38b146105fe5761010c565b80638da5cb5b146103005780638f32d59b1461033157806395d89b41146103465780639cc850e81461035b5761010c565b806323b872dd116100d157806323b872dd1461024a578063313ce5671461028d57806370a08231146102b857806379ba5097146102eb5761010c565b8063069c9fae1461011157806306fdde031461014c578063095ea7b3146101d657806318160ddd146102235761010c565b3661010c57600080fd5b600080fd5b34801561011d57600080fd5b5061014a6004803603604081101561013457600080fd5b506001600160a01b038135169060200135610631565b005b34801561015857600080fd5b506101616107b0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019b578181015183820152602001610183565b50505050905090810190601f1680156101c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e257600080fd5b5061020f600480360360408110156101f957600080fd5b506001600160a01b038135169060200135610847565b604080519115158252519081900360200190f35b34801561022f57600080fd5b506102386108ad565b60408051918252519081900360200190f35b34801561025657600080fd5b5061020f6004803603606081101561026d57600080fd5b506001600160a01b038135811691602081013590911690604001356108f0565b34801561029957600080fd5b506102a26109fb565b6040805160ff9092168252519081900360200190f35b3480156102c457600080fd5b50610238600480360360208110156102db57600080fd5b50356001600160a01b0316610a04565b3480156102f757600080fd5b5061014a610a1f565b34801561030c57600080fd5b50610315610a9a565b604080516001600160a01b039092168252519081900360200190f35b34801561033d57600080fd5b5061020f610aa9565b34801561035257600080fd5b50610161610aba565b34801561036757600080fd5b5061014a600480360360a081101561037e57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156103a957600080fd5b8201836020820111156103bb57600080fd5b803590602001918460018302840111640100000000831117156103dd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561043057600080fd5b82018360208201111561044257600080fd5b8035906020019184600183028401116401000000008311171561046457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505060ff8335169350505060200135610b18565b3480156104b957600080fd5b5061020f600480360360408110156104d057600080fd5b506001600160a01b038135169060200135610bb4565b3480156104f257600080fd5b5061020f6004803603606081101561050957600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561053957600080fd5b82018360208201111561054b57600080fd5b8035906020019184600183028401116401000000008311171561056d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c64945050505050565b3480156105ba57600080fd5b50610315610dac565b3480156105cf57600080fd5b50610238600480360360408110156105e657600080fd5b506001600160a01b0381358116916020013516610dbb565b34801561060a57600080fd5b5061014a6004803603602081101561062157600080fd5b50356001600160a01b0316610de6565b610639610aa9565b61064257600080fd5b6001600160a01b03821661069b576000546001600160a01b03166108fc821561066b578261066d565b475b6040518115909202916000818181858888f19350505050158015610695573d6000803e3d6000fd5b506107ac565b6000546001600160a01b038084169163a9059cbb911683156106bd5783610730565b604080516370a0823160e01b815230600482015290516001600160a01b038716916370a08231916024808301926020929190829003018186803b15801561070357600080fd5b505afa158015610717573d6000803e3d6000fd5b505050506040513d602081101561072d57600080fd5b50515b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561077f57600080fd5b505af1158015610793573d6000803e3d6000fd5b505050506040513d60208110156107a957600080fd5b50505b5050565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561083c5780601f106108115761010080835404028352916020019161083c565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b505050505090505b90565b3360008181526007602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600080805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8546005546108eb9163ffffffff610e1916565b905090565b6001600160a01b038316600090815260066020526040812054610919908363ffffffff610e1916565b6001600160a01b0385166000908152600660209081526040808320939093556007815282822033835290522054610956908363ffffffff610e1916565b6001600160a01b03808616600090815260076020908152604080832033845282528083209490945591861681526006909152205461099a908363ffffffff610e6216565b6001600160a01b0380851660008181526006602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60045460ff1690565b6001600160a01b031660009081526006602052604090205490565b6001546001600160a01b03163314610a3657600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60028054604080516020601f600019610100600187161502019094168590049384018190048102820181019092528281526060939092909183018282801561083c5780601f106108115761010080835404028352916020019161083c565b610b2185610ebc565b8351610b34906002906020870190610fc8565b508251610b48906003906020860190610fc8565b506004805460ff191660ff841617905560058190556001600160a01b0385166000818152600660209081526040808320859055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050505050565b33600090815260066020526040812054610bd4908363ffffffff610e1916565b33600090815260066020526040808220929092556001600160a01b03851681522054610c06908363ffffffff610e6216565b6001600160a01b0384166000818152600660209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b3360008181526007602090815260408083206001600160a01b038816808552908352818420879055815187815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b83811015610d3b578181015183820152602001610d23565b50505050905090810190601f168015610d685780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610d8a57600080fd5b505af1158015610d9e573d6000803e3d6000fd5b506001979650505050505050565b6001546001600160a01b031681565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b610dee610aa9565b610df757600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000610e5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f31565b9392505050565b600082820183811015610e5b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600054600160a01b900460ff1615610ed357600080fd5b6000805460ff60a01b196001600160a01b038085166001600160a01b03199093169290921716600160a01b17808355604051911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b60008184841115610fc05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f85578181015183820152602001610f6d565b50505050905090810190601f168015610fb25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061100957805160ff1916838001178555611036565b82800160010185558215611036579182015b8281111561103657825182559160200191906001019061101b565b50611042929150611046565b5090565b61084491905b80821115611042576000815560010161104c56fea26469706673582212201ea08ccd1f4587bf56b00664b4e3fcdcfcb6c37a0506bfc63961e035a6f0b6ff64736f6c63430006090033a2646970667358221220036340fc8b92cbc01f9cc8744aee7979283eab56b02433810c65aa332828893764736f6c63430006090033",
  "deployedBytecode": "0x6080604052600436106100e15760003560e01c80638f32d59b1161007f578063d4ee1d9011610059578063d4ee1d9014610374578063de0946af14610389578063f2fde38b146103bc578063fc91a897146103ef576100eb565b80638f32d59b14610201578063ccdb3f451461022a578063cdaca7d51461023f576100eb565b8063534349f5116100bb578063534349f51461017c5780637002ce421461019157806379ba5097146101d75780638da5cb5b146101ec576100eb565b8063069c9fae146100f0578063182a75061461012b5780631a7626e714610155576100eb565b366100eb57600080fd5b600080fd5b3480156100fc57600080fd5b506101296004803603604081101561011357600080fd5b506001600160a01b038135169060200135610422565b005b34801561013757600080fd5b506101296004803603602081101561014e57600080fd5b50356105a1565b34801561016157600080fd5b5061016a6105f4565b60408051918252519081900360200190f35b34801561018857600080fd5b5061016a6105fa565b34801561019d57600080fd5b506101bb600480360360208110156101b457600080fd5b5035610600565b604080516001600160a01b039092168252519081900360200190f35b3480156101e357600080fd5b50610129610627565b3480156101f857600080fd5b506101bb6106a2565b34801561020d57600080fd5b506102166106b1565b604080519115158252519081900360200190f35b34801561023657600080fd5b506101bb6106c2565b6101bb6004803603608081101561025557600080fd5b81019060208101813564010000000081111561027057600080fd5b82018360208201111561028257600080fd5b803590602001918460018302840111640100000000831117156102a457600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092959493602081019350359150506401000000008111156102f757600080fd5b82018360208201111561030957600080fd5b8035906020019184600183028401116401000000008311171561032b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505060ff83351693505050602001356106d1565b34801561038057600080fd5b506101bb610a4f565b34801561039557600080fd5b50610129600480360360208110156103ac57600080fd5b50356001600160a01b0316610a5e565b3480156103c857600080fd5b50610129600480360360208110156103df57600080fd5b50356001600160a01b0316610ae3565b3480156103fb57600080fd5b506102166004803603602081101561041257600080fd5b50356001600160a01b0316610b16565b61042a6106b1565b61043357600080fd5b6001600160a01b03821661048c576000546001600160a01b03166108fc821561045c578261045e565b475b6040518115909202916000818181858888f19350505050158015610486573d6000803e3d6000fd5b5061059d565b6000546001600160a01b038084169163a9059cbb911683156104ae5783610521565b604080516370a0823160e01b815230600482015290516001600160a01b038716916370a08231916024808301926020929190829003018186803b1580156104f457600080fd5b505afa158015610508573d6000803e3d6000fd5b505050506040513d602081101561051e57600080fd5b50515b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561057057600080fd5b505af1158015610584573d6000803e3d6000fd5b505050506040513d602081101561059a57600080fd5b50505b5050565b6105a96106b1565b6105b257600080fd5b600354604080519182526020820183905280517fcc2f49c6214278ae5862935eff953448e8e69118d10abfafaf63ea6aa35255cb9281900390910190a1600355565b60035481565b60055490565b6005818154811061060d57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b0316331461063e57600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b6002546001600160a01b031681565b60006003543410156106e257600080fd5b601b8360ff1611156106f357600080fd5b6000821161070057600080fd5b60405161070c90610b2b565b604051809103906000f080158015610728573d6000803e3d6000fd5b506040516313990a1d60e31b8152336004820181815260ff871660648401526084830186905260a060248401908152895160a485015289519495506001600160a01b03861694639cc850e8948b938b938b938b93604481019160c490910190602089019080838360005b838110156107aa578181015183820152602001610792565b50505050905090810190601f1680156107d75780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b8381101561080a5781810151838201526020016107f2565b50505050905090810190601f1680156108375780820380516001836020036101000a031916815260200191505b50975050505050505050600060405180830381600087803b15801561085b57600080fd5b505af115801561086f573d6000803e3d6000fd5b5050506001600160a01b0382166000818152600460205260408120805460ff191660019081179091556005805491820181559091527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db00180546001600160a01b0319168217905590506108e06106a2565b6001600160a01b03167f3bc7f29f3ebe37f3907a35128d9fa2a85b96814855b2e869cfbfacdd6cd11c42878787876040518080602001806020018560ff1660ff168152602001848152602001838103835287818151815260200191508051906020019080838360005b83811015610961578181015183820152602001610949565b50505050905090810190601f16801561098e5780820380516001836020036101000a031916815260200191505b50838103825286518152865160209182019188019080838360005b838110156109c15781810151838201526020016109a9565b50505050905090810190601f1680156109ee5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a33415610a4757610a0d6106a2565b6001600160a01b03166108fc349081150290604051600060405180830381858888f19350505050158015610a45573d6000803e3d6000fd5b505b949350505050565b6001546001600160a01b031681565b610a666106b1565b610a6f57600080fd5b6002546001600160a01b031615610a8557600080fd5b604080516001600160a01b038316815290517f0ac885cfcac9d1450e80f787dbf9546001fb50414106435b10b1d27b448b86689181900360200190a1600280546001600160a01b0319166001600160a01b0392909216919091179055565b610aeb6106b1565b610af457600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b60046020526000908152604090205460ff1681565b6110b680610b398339019056fe608060405234801561001057600080fd5b50611096806100206000396000f3fe6080604052600436106101025760003560e01c80638da5cb5b11610095578063a9059cbb11610064578063a9059cbb146104ad578063cae9ca51146104e6578063d4ee1d90146105ae578063dd62ed3e146105c3578063f2fde38b146105fe5761010c565b80638da5cb5b146103005780638f32d59b1461033157806395d89b41146103465780639cc850e81461035b5761010c565b806323b872dd116100d157806323b872dd1461024a578063313ce5671461028d57806370a08231146102b857806379ba5097146102eb5761010c565b8063069c9fae1461011157806306fdde031461014c578063095ea7b3146101d657806318160ddd146102235761010c565b3661010c57600080fd5b600080fd5b34801561011d57600080fd5b5061014a6004803603604081101561013457600080fd5b506001600160a01b038135169060200135610631565b005b34801561015857600080fd5b506101616107b0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561019b578181015183820152602001610183565b50505050905090810190601f1680156101c85780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e257600080fd5b5061020f600480360360408110156101f957600080fd5b506001600160a01b038135169060200135610847565b604080519115158252519081900360200190f35b34801561022f57600080fd5b506102386108ad565b60408051918252519081900360200190f35b34801561025657600080fd5b5061020f6004803603606081101561026d57600080fd5b506001600160a01b038135811691602081013590911690604001356108f0565b34801561029957600080fd5b506102a26109fb565b6040805160ff9092168252519081900360200190f35b3480156102c457600080fd5b50610238600480360360208110156102db57600080fd5b50356001600160a01b0316610a04565b3480156102f757600080fd5b5061014a610a1f565b34801561030c57600080fd5b50610315610a9a565b604080516001600160a01b039092168252519081900360200190f35b34801561033d57600080fd5b5061020f610aa9565b34801561035257600080fd5b50610161610aba565b34801561036757600080fd5b5061014a600480360360a081101561037e57600080fd5b6001600160a01b0382351691908101906040810160208201356401000000008111156103a957600080fd5b8201836020820111156103bb57600080fd5b803590602001918460018302840111640100000000831117156103dd57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561043057600080fd5b82018360208201111561044257600080fd5b8035906020019184600183028401116401000000008311171561046457600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295505060ff8335169350505060200135610b18565b3480156104b957600080fd5b5061020f600480360360408110156104d057600080fd5b506001600160a01b038135169060200135610bb4565b3480156104f257600080fd5b5061020f6004803603606081101561050957600080fd5b6001600160a01b038235169160208101359181019060608101604082013564010000000081111561053957600080fd5b82018360208201111561054b57600080fd5b8035906020019184600183028401116401000000008311171561056d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610c64945050505050565b3480156105ba57600080fd5b50610315610dac565b3480156105cf57600080fd5b50610238600480360360408110156105e657600080fd5b506001600160a01b0381358116916020013516610dbb565b34801561060a57600080fd5b5061014a6004803603602081101561062157600080fd5b50356001600160a01b0316610de6565b610639610aa9565b61064257600080fd5b6001600160a01b03821661069b576000546001600160a01b03166108fc821561066b578261066d565b475b6040518115909202916000818181858888f19350505050158015610695573d6000803e3d6000fd5b506107ac565b6000546001600160a01b038084169163a9059cbb911683156106bd5783610730565b604080516370a0823160e01b815230600482015290516001600160a01b038716916370a08231916024808301926020929190829003018186803b15801561070357600080fd5b505afa158015610717573d6000803e3d6000fd5b505050506040513d602081101561072d57600080fd5b50515b6040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b15801561077f57600080fd5b505af1158015610793573d6000803e3d6000fd5b505050506040513d60208110156107a957600080fd5b50505b5050565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561083c5780601f106108115761010080835404028352916020019161083c565b820191906000526020600020905b81548152906001019060200180831161081f57829003601f168201915b505050505090505b90565b3360008181526007602090815260408083206001600160a01b038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b600080805260066020527f54cdd369e4e8a8515e52ca72ec816c2101831ad1f18bf44102ed171459c9b4f8546005546108eb9163ffffffff610e1916565b905090565b6001600160a01b038316600090815260066020526040812054610919908363ffffffff610e1916565b6001600160a01b0385166000908152600660209081526040808320939093556007815282822033835290522054610956908363ffffffff610e1916565b6001600160a01b03808616600090815260076020908152604080832033845282528083209490945591861681526006909152205461099a908363ffffffff610e6216565b6001600160a01b0380851660008181526006602090815260409182902094909455805186815290519193928816927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a35060019392505050565b60045460ff1690565b6001600160a01b031660009081526006602052604090205490565b6001546001600160a01b03163314610a3657600080fd5b600154600080546040516001600160a01b0393841693909116917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a360018054600080546001600160a01b03199081166001600160a01b03841617909155169055565b6000546001600160a01b031690565b6000546001600160a01b0316331490565b60028054604080516020601f600019610100600187161502019094168590049384018190048102820181019092528281526060939092909183018282801561083c5780601f106108115761010080835404028352916020019161083c565b610b2185610ebc565b8351610b34906002906020870190610fc8565b508251610b48906003906020860190610fc8565b506004805460ff191660ff841617905560058190556001600160a01b0385166000818152600660209081526040808320859055805185815290517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35050505050565b33600090815260066020526040812054610bd4908363ffffffff610e1916565b33600090815260066020526040808220929092556001600160a01b03851681522054610c06908363ffffffff610e6216565b6001600160a01b0384166000818152600660209081526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b3360008181526007602090815260408083206001600160a01b038816808552908352818420879055815187815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a3604051638f4ffcb160e01b815233600482018181526024830186905230604484018190526080606485019081528651608486015286516001600160a01b038a1695638f4ffcb195948a94938a939192909160a490910190602085019080838360005b83811015610d3b578181015183820152602001610d23565b50505050905090810190601f168015610d685780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610d8a57600080fd5b505af1158015610d9e573d6000803e3d6000fd5b506001979650505050505050565b6001546001600160a01b031681565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205490565b610dee610aa9565b610df757600080fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000610e5b83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610f31565b9392505050565b600082820183811015610e5b576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b600054600160a01b900460ff1615610ed357600080fd5b6000805460ff60a01b196001600160a01b038085166001600160a01b03199093169290921716600160a01b17808355604051911691907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350565b60008184841115610fc05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610f85578181015183820152602001610f6d565b50505050905090810190601f168015610fb25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061100957805160ff1916838001178555611036565b82800160010185558215611036579182015b8281111561103657825182559160200191906001019061101b565b50611042929150611046565b5090565b61084491905b80821115611042576000815560010161104c56fea26469706673582212201ea08ccd1f4587bf56b00664b4e3fcdcfcb6c37a0506bfc63961e035a6f0b6ff64736f6c63430006090033a2646970667358221220036340fc8b92cbc01f9cc8744aee7979283eab56b02433810c65aa332828893764736f6c63430006090033",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 2832,
        "contract": "contracts/Dutch/contracts/Tokens/Erc20Factory.sol:Erc20Factory",
        "label": "mOwner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2834,
        "contract": "contracts/Dutch/contracts/Tokens/Erc20Factory.sol:Erc20Factory",
        "label": "initialised",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 2836,
        "contract": "contracts/Dutch/contracts/Tokens/Erc20Factory.sol:Erc20Factory",
        "label": "newOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 2113,
        "contract": "contracts/Dutch/contracts/Tokens/Erc20Factory.sol:Erc20Factory",
        "label": "newAddress",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 2116,
        "contract": "contracts/Dutch/contracts/Tokens/Erc20Factory.sol:Erc20Factory",
        "label": "minimumFee",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 2120,
        "contract": "contracts/Dutch/contracts/Tokens/Erc20Factory.sol:Erc20Factory",
        "label": "isChild",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 2123,
        "contract": "contracts/Dutch/contracts/Tokens/Erc20Factory.sol:Erc20Factory",
        "label": "children",
        "offset": 0,
        "slot": "5",
        "type": "t_array(t_address)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}
